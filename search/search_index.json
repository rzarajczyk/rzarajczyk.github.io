{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#general","title":"General","text":"<ul> <li>JVM-related Conferences</li> <li>Search-related Conferences</li> <li>Using SSH keys in GitHub (single or multiple)</li> <li>Interesting and inspiring online resources</li> <li>Biased random algorithm</li> <li>Screenshots with device frames</li> </ul>"},{"location":"#solr","title":"Solr","text":"<ul> <li>Solr setup</li> <li>Solr core configuration</li> <li>Solr indexing</li> <li>Solr keyword matching</li> <li>Solr querying</li> </ul>"},{"location":"#side-projects","title":"Side projects","text":"<ul> <li>Break time!</li> <li>memo.education</li> <li>Family Rules</li> <li>Hue Setup</li> <li>Various SmartHome projects</li> <li>Solr IdsExportPlugins</li> </ul>"},{"location":"#macos","title":"MacOS","text":"<ul> <li>My favorite MacOS initial setup</li> <li>Getting memory statistics from command line in MacOS</li> <li>Docker without Docker Desktop on MacOS</li> <li>Running amd64 Docker images on Apple M1/M2</li> </ul>"},{"location":"#ubuntu","title":"Ubuntu","text":"<ul> <li>My favorite Ubuntu 22.04 initial setup</li> <li>Ubuntu 22.04 and Logitech MX Keys for Mac</li> <li>Ubuntu 22.04 and Logitech MX Vertical</li> </ul> <p>Disclaimer: no warranties given! - license</p> <p>About this page, author, license</p>"},{"location":"about/","title":"About this page, author,  license","text":"<p>My name is Rafa\u0142 Zarajczyk, I'm a software developer based in Warsaw, Poland.</p> <p>Please take a look at: http://zarajczyk.pl/ - for links to my GitHub, LinkedIn and Facebook.</p>"},{"location":"about/#this-page","title":"This page","text":"<p>This page was created using Material for MkDocs</p> <p>Comments are powered by Giscus, mainly due to official support in Material for MkDocs.</p> <p>Traffic statis are collected by Google Analytics.</p> <p>All the content was created by me - see license at No warranties given! - license</p>"},{"location":"general-biased-random/","title":"Biased random algorithm","text":"<p>Choosing random elements from an array without repetitions is generally a typical programming task. But what if we would like to have randomness, but with some influence on how this randomness works?</p> <p>This is my solution for the biased random problem - selecting random array elements with the ability to adjust the likelihood of each element being chosen.</p>"},{"location":"general-biased-random/#problem-description","title":"Problem description","text":"<p>To be more precise, let's write a PHP function with the following structure:</p> <pre><code>&lt;?php\n\nfunction getMultipleBiasedRandomElements(array $array, array $biases, int $count) {\n    // code here...\n}\n\n?&gt;\n</code></pre> <p>where:</p> <ul> <li><code>$array</code> is an array of elements of any type.  This will be the array from which we will choose the elements</li> <li><code>$biases</code> an array of floats matching <code>$array</code>'s size. Each element of <code>$biases</code> should   define the probability of choosing corresponding item from <code>$array</code>, where:<ul> <li>1.0 is the standard probability, </li> <li>values below 1.0 reduce the likelihood, </li> <li>0.0 means the element can\u2019t be chosen, </li> <li>values above 1.0 increase the likelihood.</li> <li>negative values are not allowed</li> </ul> </li> <li><code>$count</code> is the number of elements to select.</li> </ul>"},{"location":"general-biased-random/#example","title":"Example","text":"<p>Given <code>$array = ['a', 'b', 'c', 'd']</code>, <code>$biases = [1.0, 0.5, 1.0, 3.0]</code>, and <code>$count = 2</code>:</p> <ul> <li>The probability of selecting <code>'b'</code> is halved compared to <code>'a'</code> or <code>'c'</code> (factor 0.5).</li> <li>The probability of selecting <code>'d'</code> is three times higher than <code>'a'</code> or <code>'c'</code> (factor 3.0).</li> </ul>"},{"location":"general-biased-random/#real-life-example","title":"Real-life example","text":"<p>Some example of where can we use the biased random algorithm is the multiplication table quiz app for primary school kids:</p> <p>The application should ask a few random question about the multiplication table and verify the student's answer.</p> <p></p> <p>The problem is that the multiplication table contains some very simple operations (like multiplying by <code>0</code>, <code>1</code> or <code>10</code>), but also some more difficult to remember (like <code>7 * 8</code>)</p> <p>Let's take a look:</p> <p> very simple - simple - moderate - difficult </p> <p>Of course, we can argue whether some operation is \"simple\", \"very simple\", \"normal\" or \"difficult\", but let's stick to the definition from the table above. We can see that there's more green than red in the table - \"simple\" and \"very simple\" questions are majority, \"difficult\" - are minority.</p> <p>But if we want kids to learn, the app should focus on the difficult operations, and reduce question about the simple ones.</p> <p>This is where the biased random algorithm might be used. We could assign higher biases to \"difficult\" questions, making them more likely to be chosen, and  lower biases to the \"simple\" and \"very simple\" to make them less probable to be chosen.</p>"},{"location":"general-biased-random/#my-solution","title":"My solution","text":"<p>Do you have a better idea?</p> <p>This solution works, but maybe you have some better solution? Let me know in the comments!</p> <p>This is my solution (see comments on the listing):</p> <pre><code>&lt;?php \n\nfunction random(): float {  #(1)!\n    return mt_rand() / mt_getrandmax();\n}\n\nfunction getBiasedRandomIndex(array $biases): int { #(2)!\n    /* example\n    biases = [ 1.0, 0.5, 2.0, 1.25, 1.0 ]\n    expected ranges = [0-1.0)[1.0-1.5)[1.5-3.5)[3.5-4.75)[4.75-5.75)\n    */\n\n    $rightRangeBordersExclusive = array();\n    $border = 0.0;\n    foreach ($biases as $bias) {\n        $border += $bias;\n        $rightRangeBordersExclusive []= $border;\n    }\n\n    $random = random() * $border;\n\n    $index = 0;\n    while ($random &gt;= $rightRangeBordersExclusive[$index]) {\n        $index++;\n    }\n    return $index;\n}\n\nfunction getMultipleBiasedRandomElements(array $array, array $biases, int $count) {\n    if (count($array) &lt;= $count) { #(3)!\n        // nothing to select, just randomize the input array\n        $copy = $array;\n        shuffle($copy);\n        return $copy;\n    }\n    $result = array();\n    $arrayCopy = $array; #(4)!\n    $biasesCopy = $biases;\n    for ($i=0; $i&lt;$count; $i++) { #(5)!\n        $randomIndex = getBiasedRandomIndex($biasesCopy);\n        $selectedElement = $arrayCopy[$randomIndex];\n        $result []= $selectedElement;\n        array_splice($arrayCopy, $randomIndex, 1);\n        array_splice($biasesCopy, $randomIndex, 1);\n    }\n    return $result;\n}\n\n?&gt;\n</code></pre> <ol> <li>PHP doesn't have a straightforward function to generate a random floating point number between 0.0 and 1.0,    so I defined my own using PHP's built-in functions.</li> <li>This function requires more explanation; please refer to the description below the listing.</li> <li>In this case, we should select the entire array and simply randomize it. There's no need to use the biased random algorithm.</li> <li>We need to make sure we won't change the input array. This operation in not required in PHP, because - unlike other    languages, like Java - PHP passes arrays by value (copies them). Therefore, the input array is already a copy.    However, I included it for clarity, especially for readers unfamiliar with PHP.</li> <li>In the loop, select a random element from the array copy, append it to <code>$result</code>, and remove it from the copy to prevent duplicates.</li> </ol>"},{"location":"general-biased-random/#how-getbiasedrandomindex-works","title":"How <code>getBiasedRandomIndex</code> works?","text":"<p>The most interesting part of this algorithm is the <code>getBiasedRandomIndex</code> function. The main idea behind it is to create a range, which is split into parts of length proportional to the biases (probabilities) of each array elements.</p>"},{"location":"general-biased-random/#example-1-when-biases-are-equal","title":"Example 1 - when biases are equal","text":"<ul> <li>let <code>$array</code> be <code>['a', 'b', 'c', 'd']</code></li> <li>let <code>$biases</code> all be equal -  <code>[1.0, 1.0, 1.0, 1.0]</code></li> </ul> <p>Then the range should look like this:</p> a b c d <p>Now if we pick a random point from this range (using a normal, unbiased random), the probability of choosing a point belonging to each part is equal.</p>"},{"location":"general-biased-random/#example-2-when-biases-are-not-equal","title":"Example 2 - when biases are not equal","text":"<ul> <li>let <code>$array</code> be <code>['a', 'b', 'c', 'd']</code></li> <li>let <code>$biases</code> all be equal -  <code>[1.0, 0.5, 1.0, 3.0]</code></li> </ul> <p>Then the range should look like this:</p> a b c d <p>Please note, that:</p> <ul> <li>width of <code>a</code> and <code>c</code> are equal</li> <li>width of <code>b</code> if half the width of <code>a</code> or <code>c</code></li> <li>width of <code>d</code> if triple the width of <code>a</code> or <code>c</code></li> </ul> <p>Now we can clearly see, that if we pick a random point from this range (using a normal, unbiased random), the probability of choosing a point belonging to each part is not equal anymore - it's proportional to the biases. And this is exactly what we want.</p>"},{"location":"general-biased-random/#summary-so-how-getbiasedrandomindex-works","title":"Summary: so how getBiasedRandomIndex works","text":"<ol> <li>First <code>getBiasedRandomIndex</code> creates a range by summing all the biases and remembering the borders    between each part in <code>$rightRangeBordersExclusive</code> array (lines 13-18).</li> <li>Then it picks a random point from this range - line 20</li> <li>Finally, it checks to which part the point belongs and returns the index of this part (lines 22-26)</li> </ol>"},{"location":"general-github/","title":"Using SSH keys in GitHub (single or multiple)","text":""},{"location":"general-github/#generating-new-ssh-key","title":"Generating new SSH key","text":"<p><pre><code>$ ssh-keygen -t ed25519 -C \"your_email@example.com\"\n</code></pre> Note: make sure the generated SSH key has correct access rights: <pre><code>chmod 600 ~/.ssh/&lt;key&gt;\n</code></pre></p>"},{"location":"general-github/#adding-public-key-to-github","title":"Adding PUBLIC key to Github","text":"<p>See official GitHub tutorial</p> <p>Make sure you upload PUBLIC key!</p>"},{"location":"general-github/#single-ssh-key-setup","title":"Single SSH key setup","text":"<p>Edit <code>~/.ssh/config</code> and put there the following content: <pre><code>Host github.com\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/&lt;key&gt;\n</code></pre></p> <p>And that's it, you can clone your private repo</p>"},{"location":"general-github/#multiple-ssh-keys-setup","title":"Multiple SSH keys setup","text":""},{"location":"general-github/#modify-sshconfig","title":"Modify <code>~/.ssh/config</code>","text":"<p>Edit <code>~/.ssh/config</code> and put there the following content: <pre><code>Host github.com-&lt;name&gt;\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/&lt;key&gt;\n</code></pre> Replace <code>&lt;name&gt;</code> with some unique name which will identify your accounts. It might be <code>account1</code>, but also f.ex. your username</p>"},{"location":"general-github/#set-the-appropriate-origin-url","title":"Set the appropriate origin url","text":"<p>In the git repository: <pre><code># Check current origin URL\ngit config --get remote.origin.url\n&gt; https://github.com/&lt;repo-path&gt;.git\n\n# Remove origin URL\ngit remote remove origin\n\n# Add new, modified origin URL\ngit remote add origin github.com-&lt;name&gt;:/&lt;repo-path&gt;.git \n</code></pre> Replace <code>&lt;name&gt;</code> with the name you put in your <code>~/.ssh/config</code> file</p>"},{"location":"general-github/#set-the-appropriate-username-and-useremail-in-the-current-repo","title":"Set the appropriate user.name and user.email in the current repo","text":"<p>If you want to override your username and email in the repository, you can do it: </p> <pre><code>git config user.email \"your_email@example.com\"\ngit config user.name \"Your Name\"\n</code></pre> <p>Note: if you struggle with remembering if you have entered correct <code>user.name</code> and <code>user.email</code> in each of your repos, I recommend adding this information into command prompt - see Agnoster Theme with Git user display</p>"},{"location":"general-interesting-online-tools/","title":"Interesting and inspiring online resources","text":""},{"location":"general-interesting-online-tools/#non-technical","title":"Non-technical","text":"<ul> <li>brain.fm \u2013 music that helps with focus.</li> <li>freepik \u2013 free graphics resources.</li> <li>Around The Corner - How Differential Steering Works \u2013 a 1937 documentary (pre-WWII!) that\u2019s the best explanation of differentials I\u2019ve seen. And the first one which allowed me to really understand how does it work.</li> <li>Recording of the voice of J\u00f3zef Pi\u0142sudzki - Voice of J\u00f3zef Pi\u0142sudzki, recorded on Sep 5th, 1924 (yes, that's 100 years ago!)</li> <li>ASCII Arg Generator - generator of ASCII Art texts</li> </ul>"},{"location":"general-interesting-online-tools/#technical","title":"Technical","text":"<ul> <li>Epoch Converter - converts timestamps from/to human-readable format</li> <li>Regex101 - tool for testing regular expressions</li> <li>choosealicense.com - human-friendly guide to software licenses.</li> </ul>"},{"location":"general-jvm-conferences/","title":"JVM-related conferences","text":"<p>Note</p> <p>This lists is far from being complete!</p> <p>Price list legend:</p> <pre><code>* \ud83c\udd93 - free entrance possible\n* \ud83d\udcb8 &lt; 500 PLN\n* \ud83d\udcb8\ud83d\udcb8 500 - 1500 PLN\n* \ud83d\udcb8\ud83d\udcb8\ud83d\udcb8 &gt; 1500 PLN\n</code></pre>"},{"location":"general-jvm-conferences/#recurrent-events-spring-season","title":"Recurrent events - spring season","text":"<p>Warszawskie Dni Informatyki - online + Warsaw \u00a0\u00a0\u00a0 \ud83c\udd93</p> <p>KotlinConf - various cities \u00a0\u00a0\u00a0 paid</p> <p>4developers - Warsaw \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8</p> <p>GeeCON - Krak\u00f3w \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8</p> <p>Devoxx UK - London \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8\ud83d\udcb8</p> <p>Devoxx Poland - Krak\u00f3w \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8</p> <p>infoshare - Gda\u0144sk \u00a0\u00a0\u00a0 \ud83d\udcb8?</p> <p>Code Europe Krak\u00f3w - Krak\u00f3w \u00a0\u00a0\u00a0 \ud83d\udcb8/\ud83d\udcb8\ud83d\udcb8</p> <p>Confitura -  Warsaw, paid (cheap)</p> <p>Javeloper - online, free</p> <p>IntelliJ IDEA Conf - ???</p>"},{"location":"general-jvm-conferences/#recurrent-events-autumn-season","title":"Recurrent events - autumn season","text":"<p>JavaZone - Oslo, \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8\ud83d\udcb8</p> <p>Programistok - Bia\u0142ystok \u00a0\u00a0\u00a0 \ud83d\udcb8</p> <p>JDD - Krak\u00f3w \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8</p> <p>Ya!vaConf - Warsaw \u00a0\u00a0\u00a0 \ud83d\udcb8</p> <p>JAX London - London/online, paid</p> <p>Devoxx Belgium - Antwerp, paid</p> <p>4developers Katowice - Katowice</p> <p>4developers Pozna\u0144 - Pozna\u0144, paid</p> <p>4developers Wroc\u0142aw - Wroc\u0142aw, paid</p> <p>4developers \u0141\u00f3d\u017a - \u0141\u00f3d\u017a, paid</p> <p>geecon Prague - Prague, paid</p>"},{"location":"general-jvm-conferences/#others","title":"Others","text":"<p>I love dev - May 19, 2023, Warsaw  \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8</p> <p>Code Europe Warszawa - May 25-26, 2023, Warsaw \u00a0\u00a0\u00a0 \ud83d\udcb8/\ud83d\udcb8\ud83d\udcb8</p>"},{"location":"general-screenshots-with-device-frames/","title":"Screenshots with device frames","text":"<p>How to make screenshots with device frames? How to make them look as if they were taken on a real device?</p>"},{"location":"general-screenshots-with-device-frames/#option-1-device-art-generator-from-google","title":"Option 1: Device Art Generator from Google","text":"<p>Link: https://developer.android.com/distribute/marketing-tools/device-art-generator</p> <p>Create a standard screenshot and drag-and-drop on a device on the website.</p> <p></p> <p>Available devices:</p> <ul> <li>laptops (Pixelbook Go, Pixelbook)</li> <li>smartphones (Google Pixel in different versions)</li> <li>tablets (generic, Google Nexus)  </li> <li>smartwatches </li> </ul> <p>Note</p> <p>Note: the website does not crop the image, the screenshot should have the aspect ratio of the device.</p>"},{"location":"general-screenshots-with-device-frames/#option-2-chrome-dev-tools","title":"Option 2: Chrome Dev Tools","text":"<p>Open Google Chrome, open Dev Tools (F12), click \"Toggle device toolbar\" or Ctrl+Shift+M to open the device toolbar.</p> <p></p> <p>Select one of the following devices from the list:</p> <ul> <li>Nexus 5x (smaprtphone)</li> <li>Nexus 6P (smaprtphone)</li> <li>Nest Hub (smart speaker with screen)</li> <li>Nest Hub Max (smart speaker with screen)</li> <li>iPhone 6/7/8 (smartphone)</li> <li>iPhone 6/7/8 Plus (smartphone)</li> <li>iPad (tablet)     </li> </ul> <p>Select exactly those devices</p> <p>Select exactly those devices.</p> <p>For example \"iPad Pro\" will not show the frame. It must be exactly \"iPad\".</p> <p>If the device is not on the list, click \"Edit\" and add it.</p> <p>Click the little triangle in the top right corner to open the menu and select \"Show device frame\"</p> <p></p> <p>Click the little triangle again and select \"Capture screenshot\"</p> <p></p>"},{"location":"general-search-conferences/","title":"Search-related conferences","text":"<p>Note</p> <p>This lists is far from being complete!</p> <p>Price list legend:</p> <pre><code>* \ud83c\udd93 - free entrance possible\n* \ud83d\udcb8 &lt; 500 PLN\n* \ud83d\udcb8\ud83d\udcb8 500 - 1500 PLN\n* \ud83d\udcb8\ud83d\udcb8\ud83d\udcb8 &gt; 1500 PLN\n</code></pre>"},{"location":"general-search-conferences/#recurrent-events","title":"Recurrent Events","text":"<p>Berlin Buzzwords - Jun 18-20, Berlin (Germany) + online \u00a0\u00a0\u00a0 \ud83c\udd93/\ud83d\udcb8 online <sup>1</sup>, \ud83d\udcb8\ud83d\udcb8\ud83d\udcb8 - offline</p> <p>Haystack Berlin - Sep 20-32, Berlin \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8 </p>"},{"location":"general-search-conferences/#2023","title":"2023","text":"<p>Haystack On Tour - Feb 23, Krak\u00f3w \u00a0\u00a0\u00a0 \ud83c\udd93</p> <p>ACM CHIIR 2023 - Mar 19-23'2023, Austin (Texas, USA) \u00a0\u00a0\u00a0 \ud83d\udcb8\ud83d\udcb8\ud83d\udcb8</p>"},{"location":"general-search-conferences/#2022","title":"2022","text":"<p>ApacheCon North America - Oct 3-6, New Orleans, paid (one of the tracks is Search/Lucene)</p> <p>Activate - Oct 27, online, paid</p> <ol> <li> <p>Berlin BuzzWords offers free of charge Diversity Tickets for online conference for a large group of minorities, f.ex: women, people of colour, LGBTQIA people, disabled people, and people facing economic or social hardships\u00a0\u21a9</p> </li> </ol>"},{"location":"license/","title":"No warranties given! - license","text":"<p> I put significant effort into creating this page. I did my best to ensure that everything I write here is true (at the time of writing) and that all the code is correct before uploading it.</p> <p> You are free to use the knowledge and resources from this website without charge, for both private and commercial use. I will be grateful for mentioning or sharing this website if you find it helpful, but it's not a hard requirement.</p> <p> However, I might have made some mistakes. I might have had incomplete or incorrect information. Some knowledge may have become outdated. My laptop setup may also be different from yours.</p> <p>Therefore:</p> <p> I do not provide any warranties or accept any responsibility for the information and resources on this website..</p> <p> Regarding scripts, you use them as-is. You can read the code, and you decide whether to run it\u2014at your own risk.</p> <p> Regarding knowledge, you are encouraged to verify the information with other sources, considering the variety of computer systems, possible changes over time, and potential errors on my part. In fact, this advice should apply to all the knowledge all over the Internet :-)</p> <p>Rafa\u0142 Zarajczyk</p>"},{"location":"macos-docker-without-docker-desktop/","title":"Docker without Docker Desktop on MacOS","text":"<p>Since 2022, Docker Desktop is no longer free of change for companies above 250 employees.</p> <p>While this is not a big deal if you're working on Linux (you can still use the official command line Docker), it became a problem on MacOS, because you have to install Docker Desktop to get Docker from Docker.</p> <p>However, there are free of charge alternatives:</p> <ul> <li>podman - Apache License 2.0</li> <li>colima - MIT License</li> </ul>"},{"location":"macos-docker-without-docker-desktop/#podman","title":"Podman","text":"<p>Podman in brief: <pre><code>## Installation, see https://podman.io/getting-started/installation for details\nbrew install podman\n\n## Startup\npodman machine init\npodman machine start\n\n## Usage\npodman run hello-world:latest\npodman ps\n</code></pre> What's noteworthy:</p> <ul> <li> it works</li> <li> Podman may be used together with the GUI tool: Podman Desktop</li> <li> trivial installation</li> <li> have its own command line tool, which is very similar to docker (in fact Podman docs suggest creating an alias <code>alias docker=podman</code>),   but not the same. If you use bash scripts for automating, they might be broken</li> <li> Podman driver for Minikube is experimental. While it is possible to configure podman correctly for Minikube, it's not as easy as it might   look like - default setup doesn't work, you need to experiment with parameters to have your Minikube cluster running (in short: rootful + containerd)</li> <li> Podman is not detected as a runtime environment for testcontainers and there's no official support. Google says that it should be possible   to have it working, but requires some more additional steps (ssh'ing into Podman VM and socket tunneling)</li> <li> in some cases Podman use \"aliases\" for images. F.ex. <code>hello-world</code> is a different image than used by Docker. In my personal opinion,   this brings some uncertainty about which image I'm trying to run.</li> </ul>"},{"location":"macos-docker-without-docker-desktop/#colima","title":"Colima","text":"<p><pre><code>## Installation - see https://pet2cattle.com/2022/09/minikube-colima-macos-m1 and https://github.com/abiosoft/colima\nbrew install docker docker-compose # Note: this does not install the Docker Engine, just Docker CLI\nmkdir -p ~/.docker/cli-plugins\nln -sfn /opt/homebrew/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose\nbrew install colima\n\n## Startup\ncolima start\n\n## Usage\ndocker run hello-world:latest\ndocker ps\n</code></pre> What's noteworthy:</p> <ul> <li> it works</li> <li> no GUI/Desktop tool</li> <li> a bit more difficult installation (but come on, it's just a natural consequence of using the Docker CLI)</li> <li> uses the Docker CLI. All your automation scripts should work fine</li> <li> there's no separate Colima driver for Minikube, but the Docker driver works just fine.</li> <li> Colima is also not detected as a runtime environment for testcontainers, but there's an official support for it and it only requires two env variables to be set</li> <li> image registry is the same as in Docker</li> </ul> <p>Moreover, colima has some other cool features, including:</p> <ul> <li> build-in kubernetes</li> <li> multi-architecture support (by CPU emulation) - see this link</li> </ul> <p>It's also worth mentioning, that there are existing online reports stating that colima performs better than the original Docker Desktop.</p>"},{"location":"macos-docker-without-docker-desktop/#verdict-colima-is-better","title":"Verdict: Colima is better","text":"<p>While both Podman and Colima works fine, for me Colima is much better tool due to better compatibility with other software.</p>"},{"location":"macos-memory-statistics/","title":"Getting memory statistics from command line in MacOS","text":"<p>Getting memory statistics in MacOS from the command line is surprisingly difficult. Especially if you want to get the same information as provided by Activity Monitor.</p> <p>Below is the script which I made after digging through lots of online forums, examples, support threads etc.</p> <p>Compatibility</p> <p>Manually tested on MacOS <code>Monterey</code> and MacOS <code>Ventura</code></p>"},{"location":"macos-memory-statistics/#code","title":"Code","text":"<p>\u2b07\ufe0f download <pre><code>#!/bin/zsh\nif [ ! $(command -v numfmt) ]; then\n  echo \"coreutils not installed. Please install it:\\n\\n    brew install coreutils\\n\" &amp;&amp; exit 1\nfi\n\nVM_STAT=$(vm_stat | grep --ignore-case \"pages\")\nPAGE_SIZE_BYTES=$(vm_stat | head -n 1 | grep -oE \"[0-9]+\")\n\nfunction pages_to_bytes() {\n    echo \"$(($1 * PAGE_SIZE_BYTES))\"\n}\n\nfunction bytes_to_human_readable() {\n    echo \"$1\" | numfmt --to iec\n}\n\nfunction get_vm_stat_value_bytes() {\n    pages_to_bytes \"$(echo \"$VM_STAT\" | grep \"$1\" | grep -oE \"[0-9]+\")\"\n}\n\nTOTAL_BYTES=$(sysctl hw.memsize | grep -oE \"[0-9]+\")\n\nSWAP_USAGE_MB=$(sysctl vm.swapusage | grep -oE \"used = [0-9,.]+.\" | grep -oE \"[0-9]+\" | head -n 1)\nSWAP_USAGE_BYTES=\"$((SWAP_USAGE_MB * 1024))\"\n\nPAGEABLE_PAGES=$(sysctl vm.page_pageable_internal_count | grep -oE \"[0-9]+\")\nPAGEABLE_BYTES=$(pages_to_bytes \"$PAGEABLE_PAGES\")\n\nPURGEABLE_BYTES=$(get_vm_stat_value_bytes \"Pages purgeable\")\n\nAPP_MEMORY_BYTES=$((PAGEABLE_BYTES - PURGEABLE_BYTES))\n\nWIRED_BYTES=$(get_vm_stat_value_bytes \"Pages wired\")\nCOMPRESSED_BYTES=$(get_vm_stat_value_bytes \"Pages occupied by compressor\")\n\nUSED_BYTES=$((APP_MEMORY_BYTES + WIRED_BYTES + COMPRESSED_BYTES))\n\nFILE_BYTES=$(get_vm_stat_value_bytes \"File-backed pages\")\n\necho \"Total memory: $(bytes_to_human_readable \"$TOTAL_BYTES\")\"\necho \"Used memory: $(bytes_to_human_readable \"$USED_BYTES\")\"\necho \" - App memory: $(bytes_to_human_readable \"$APP_MEMORY_BYTES\")\"\necho \" - Wired memory: $(bytes_to_human_readable \"$WIRED_BYTES\")\"\necho \" - Compressed memory: $(bytes_to_human_readable \"$COMPRESSED_BYTES\")\"\necho \"File-backed: $(bytes_to_human_readable \"$FILE_BYTES\")\"\necho \"Swap usage: $(bytes_to_human_readable \"$SWAP_USAGE_BYTES\")\"\n</code></pre></p>"},{"location":"macos-memory-statistics/#sample-output","title":"Sample output:","text":"<pre><code>Total memory: 32G\nUsed memory: 24G\n - App memory: 17G\n - Wired memory: 5.0G\n - Compressed memory: 2.1G\nFile-backed: 7.5G\nSwap usage: 659K\n</code></pre>"},{"location":"macos-memory-statistics/#correctness","title":"Correctness","text":"<p>I do not guarantee the response is 100% correct! </p> <p>On my machine running MacOS Monterey, during my manual tests, the data correctness is as follows:</p> <p></p> Gauge Correctness Total memory 100% Used memory 96% App memory 99% Wired memory 97% Compressed memory 100% File-backed 66% Swap usage 100%"},{"location":"macos-running-amd64-images-on-apple-m1/","title":"Running docker <code>amd64</code> images on Apple Silicon M1/M2 chip","text":"<p>Apple Silicon M1/M2 chips use the <code>arm64</code> (a.k.a <code>aarch64</code>) architecture. This makes them different from the Intel chips, which are designed in <code>amd64</code> (a.k.a <code>x86_64</code>) architecture. Docker itself is a tool for virtualization, not emulation - it can create abstraction of the operating system, but cannot emulate different CPU.</p> <p>Docker images can contain different binaries for different architectures - but the publisher must intentionally append them to the image. Sometimes they do it, sometimes they don't.</p> <p></p> <p>So now the question is: how to run <code>amd64</code> image on Apple M1?</p>"},{"location":"macos-running-amd64-images-on-apple-m1/#best-option-use-different-image","title":"Best Option: use different image","text":"<p>This is really the easiest and best solution. Most of the well-known software comes in different images from different publishers, if you can't run one on them - just use others.</p>"},{"location":"macos-running-amd64-images-on-apple-m1/#option-2-experiment-with-colima-platform-emulation-support","title":"Option 2: Experiment with colima platform emulation support","text":"<p>If you're using colima (see MacOS: Docker without Docker Desktop) as Docker runtime environment, you can use a platform emulation support which is build-in colima.</p> <p>Take a look:</p> <pre><code># Starting non-emulated environment - aarch64\n$ colima start\n$ colima status\nINFO[0000] colima is running using QEMU\nINFO[0000] arch: aarch64\nINFO[0000] runtime: docker\nINFO[0000] mountType: 9p\nINFO[0000] socket: unix:///Users/rafal.zarajczyk/.colima/default/docker.sock\n$ docker run ubuntu:latest uname -a\nLinux 6d3b17834140 5.15.82-0-virt #1-Alpine SMP Mon, 12 Dec 2022 09:15:17 +0000 aarch64 aarch64 aarch64 GNU/Linux\n$ colima delete\n\n# Starting x84_64 emulation using macOS Virtualization.Framework\n$ colima start --vm-type vz --arch x86_64\n$ colima status\nINFO[0000] colima is running using macOS Virtualization.Framework\nINFO[0000] arch: x86_64\nINFO[0000] runtime: docker\nINFO[0000] mountType: virtiofs\nINFO[0000] socket: unix:///Users/rafal.zarajczyk/.colima/default/docker.sock\n$ docker run ubuntu:latest uname -a\nLinux 52575d133979 5.15.82-0-virt #1-Alpine SMP Mon, 12 Dec 2022 09:15:17 +0000 x86_64 x86_64 x86_64 GNU/Linux\n$ colima delete\n\n# Starting x84_64 emulation using QEMU\n$ colima start --vm-type qemu --arch x86_64\n$ colima status\nINFO[0000] colima is running using QEMU\nINFO[0000] arch: x86_64\nINFO[0000] runtime: docker\nINFO[0000] mountType: 9p\nINFO[0000] socket: unix:///Users/rafal.zarajczyk/.colima/default/docker.sock\n$ docker run ubuntu:latest uname -a\nLinux da2ec14060a9 5.15.82-0-virt #1-Alpine SMP Mon, 12 Dec 2022 09:15:17 +0000 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre> <p>To be honest I don't know the pros and cons of those two emulation ways. But this is definetelly something worth trying if you have to run <code>amd64</code> images.</p> <p>Note: colima allows also to specify other parameters - like the number of CPUs and available memory - so you should be able to come up with the setup that fits your needs in the best way.</p>"},{"location":"macos-running-amd64-images-on-apple-m1/#not-an-option-3-wait-till-rosetta-support-is-there-in-docker-desktop","title":"(Not an) Option 3: wait till Rosetta support is there in Docker Desktop","text":"<p>Well this is not a real option, but there's an issue https://github.com/docker/roadmap/issues/384 to add the Apple's Rosetta 2 emulator for Docker Desktop for Mac. But, as of October 2024, it's still an open issue.</p> <p>BTW. You have to use the official Docker Desktop, which might be a licence problem if you're working in a large company unwilling to pay for it.</p>"},{"location":"macos-running-amd64-images-on-apple-m1/#option-4-for-desperate-install-docker-on-a-virtual-machine-with-cpu-emulation","title":"Option 4 (for desperate): install Docker on a virtual machine with CPU emulation","text":"<p>Use the UTM virtual machine manager for MacOS, create a virtual machine in emulation mode, install Ubuntu Server on it and run your image there. This works, but:</p> <ul> <li>the performance is bad. Like a really, really bad. </li> <li>your software will run on a virtual machine, so you need to manually take care of port forwarding of all your required   ports to your VM   (not only typical docker port exposing, but also forwarding ports to the VM)</li> <li>sharing a folder with the VM using UTM requires installing additional tools in the guest system and a non-trivial   setup</li> </ul>"},{"location":"macos-setup/","title":"My favorite MacOS initial setup","text":""},{"location":"macos-setup/#key-switching-right-command-and-option-aka-polish-characters-like-on-windows","title":"Key switching: right Command and Option, aka Polish characters like on Windows","text":"<p>If you're used to typing Polish characters using a key right next to spacebar (like on Windows/Linux), use the following script to switch places of right Command and Option</p> <p>\u2b07\ufe0f download <pre><code>#!/bin/zsh\nFILEPATH=~/Library/LaunchAgents/pl.zarajczyk.RightCommandOptionKeyRemappings.plist\nif [ -f $FILEPATH ]; then\n  echo \"File $FILEPATH already exists\" &amp;&amp; exit 1\nfi\n\ntee $FILEPATH &lt;&lt; EOM\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;\n&lt;plist version=\"1.0\"&gt;\n&lt;dict&gt;\n    &lt;key&gt;Label&lt;/key&gt;\n    &lt;string&gt;com.nanoant.KeyRemapping&lt;/string&gt;\n    &lt;key&gt;ProgramArguments&lt;/key&gt;\n    &lt;array&gt;\n        &lt;string&gt;/usr/bin/hidutil&lt;/string&gt;\n        &lt;string&gt;property&lt;/string&gt;\n        &lt;string&gt;--set&lt;/string&gt;\n        &lt;string&gt;{\"UserKeyMapping\":\n    [\n        {\"HIDKeyboardModifierMappingSrc\":0x7000000e7,\"HIDKeyboardModifierMappingDst\":0x7000000e6},\n        {\"HIDKeyboardModifierMappingSrc\":0x7000000e6,\"HIDKeyboardModifierMappingDst\":0x7000000e7}\n    ]\n}&lt;/string&gt;\n    &lt;/array&gt;\n    &lt;key&gt;RunAtLoad&lt;/key&gt;\n    &lt;true/&gt;\n&lt;/dict&gt;\n&lt;/plist&gt;\nEOM\n\necho \"Done, please reboot the system\"\n</code></pre> Note:</p> <ul> <li><code>0x7000000e7</code> - right Command</li> <li><code>0x7000000e6</code> - right Option</li> <li>other possibilities of key switching: https://hidutil-generator.netlify.app/</li> </ul>"},{"location":"macos-setup/#key-switching-tilde-and-paragraph","title":"Key switching: tilde and paragraph","text":"<p>Switching places of tilde <code>~</code> and paragraph <code>\u00a7</code> buttons,  for people used to US keyboard layout forced to work on EU keyboard.</p> <p>\u2b07\ufe0f download <pre><code>#!/bin/zsh\nFILEPATH=~/Library/LaunchAgents/pl.zarajczyk.TildeParagraphKeyRemappings.plist\nif [ -f $FILEPATH ]; then\n  echo \"File $FILEPATH already exists\" &amp;&amp; exit 1\nfi\n\ntee $FILEPATH &lt;&lt; EOM\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;\n&lt;plist version=\"1.0\"&gt;\n&lt;dict&gt;\n    &lt;key&gt;Label&lt;/key&gt;\n    &lt;string&gt;com.nanoant.KeyRemapping&lt;/string&gt;\n    &lt;key&gt;ProgramArguments&lt;/key&gt;\n    &lt;array&gt;\n        &lt;string&gt;/usr/bin/hidutil&lt;/string&gt;\n        &lt;string&gt;property&lt;/string&gt;\n        &lt;string&gt;--set&lt;/string&gt;\n        &lt;string&gt;{\"UserKeyMapping\":\n    [\n        {\"HIDKeyboardModifierMappingSrc\":0x700000064,\"HIDKeyboardModifierMappingDst\":0x700000035},\n        {\"HIDKeyboardModifierMappingSrc\":0x700000035,\"HIDKeyboardModifierMappingDst\":0x700000064}\n    ]\n}&lt;/string&gt;\n    &lt;/array&gt;\n    &lt;key&gt;RunAtLoad&lt;/key&gt;\n    &lt;true/&gt;\n&lt;/dict&gt;\n&lt;/plist&gt;\nEOM\n\necho \"Done, please reboot the system\"\n</code></pre> Note:</p> <ul> <li><code>0x700000064</code> - button <code>\u00a7</code></li> <li><code>0x700000035</code> - button <code>~</code> (tilde)</li> <li>other possibilities of key switching: https://hidutil-generator.netlify.app/</li> </ul>"},{"location":"macos-setup/#buttons-home-end-page-up-i-page-down-like-on-windows","title":"Buttons Home, End, Page Up i Page Down - like on Windows","text":"<p>On Windows pressing Home/End when entering a text in a website moves the caret position to the beginning/end of text field. On MacOS, it will scroll the entire webpage.</p> <p>\u2b07\ufe0f download <pre><code>#!/bin/zsh\nFILEPATH=~/Library/KeyBindings/DefaultKeyBinding.dict\nif [ -f $FILEPATH ]; then\n  echo \"File $FILEPATH already exists\" &amp;&amp; exit 1\nfi\nif [[ $SHELL != '/bin/zsh' ]]; then\n  echo \"Please set ZSH as your default shell\" &amp;&amp; exit 1\nfi\n\nmkdir -p ~/Library/KeyBindings\ntee $FILEPATH &lt;&lt; EOM\n{\n  \"\\UF729\"  = moveToBeginningOfParagraph:; // home\n  \"\\UF72B\"  = moveToEndOfParagraph:; // end\n  \"$\\UF729\" = moveToBeginningOfParagraphAndModifySelection:; // shift-home\n  \"$\\UF72B\" = moveToEndOfParagraphAndModifySelection:; // shift-end\n  \"^\\UF729\" = moveToBeginningOfDocument:; // ctrl-home\n  \"^\\UF72B\" = moveToEndOfDocument:; // ctrl-end\n  \"^$\\UF729\" = moveToBeginningOfDocumentAndModifySelection:; // ctrl-shift-home\n  \"^$\\UF72B\" = moveToEndOfDocumentAndModifySelection:; // ctrl-shift-end\n}\nEOM\n\n## Additional steps for iTerm2\necho \"bindkey '\\e[H'    beginning-of-line\" &gt;&gt; ~/.zshrc\necho \"bindkey '\\e[F'    end-of-line\" &gt;&gt; ~/.zshrc\n\necho \"Done, please reboot the system\"\n</code></pre></p>"},{"location":"macos-setup/#key-repeating-on-long-key-press","title":"Key repeating on long key press","text":"<p>\u2b07\ufe0f download <pre><code>#!/bin/zsh\ndefaults write -g ApplePressAndHoldEnabled -bool false\necho \"Done, please reboot the system\"\n</code></pre></p>"},{"location":"macos-setup/#homebrew-coreutils-command-line-tools-installation","title":"Homebrew &amp; coreutils &amp; command line tools installation","text":"<ul> <li>Homebrew - must-have package manager for MacOS</li> <li>coreutils - GNU version of coreutils; MacOS is shipped with custom version of some of coreutils, but they work in a slightly different way than the GNU ones</li> <li>other software of my choice</li> </ul> <p>\u2b07\ufe0f download <pre><code>#!/bin/zsh\nif [[ $SHELL != '/bin/zsh' ]]; then\n  echo \"Please set ZSH as your default shell\" &amp;&amp; exit 1\nfi\n\nif [ $(command -v brew) ]; then\n  echo \"brew already installed\"\nelse\n  /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"  ## from https://brew.sh/\n  echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' &gt;&gt; ~/.zprofile\n  eval \"$(/opt/homebrew/bin/brew shellenv)\"\nfi\nbrew install coreutils\nbrew install watch\nbrew install wget\nbrew install screen\necho 'PATH=\"'$(brew --prefix coreutils)'/libexec/gnubin:$PATH\"' &gt;&gt; ~/.zshrc\necho \"Done, please reboot the system\"\n</code></pre></p>"},{"location":"macos-setup/#python-installation","title":"Python installation","text":"<p>Using pyenv</p> <p>\u2b07\ufe0f download <pre><code>#!/bin/zsh\nif [[ $SHELL != '/bin/zsh' ]]; then\n  echo \"Please set ZSH as your default shell\" &amp;&amp; exit 1\nfi\n\n# docs: https://github.com/pyenv/pyenv#basic-github-checkout\n\nbrew install pyenv\neval \"$(pyenv init --path)\"\neval \"$(pyenv init -)\"\necho 'eval \"$(pyenv init --path)\"' &gt;&gt; ~/.zprofile\necho 'eval \"$(pyenv init -)\"' &gt;&gt; ~/.zshrc\n# choose newest, f.ex. 3.10.0\nNEWEST=$(pyenv install --list | grep -E \"^\\s*\\d+\\.\\d+\\.\\d+$\" | sort -V | tail -n 1 | xargs -I{} echo {})\necho \"Will install Python $NEWEST as default\"\npyenv install \"$NEWEST\"\n# use it\npyenv global \"$NEWEST\"\n# verify\npython --version\necho \"Done, please reboot the system\"\n</code></pre></p>"},{"location":"macos-setup/#java-installation-jdk-11-and-17-at-once","title":"Java installation (JDK 11 and 17 at once)","text":"<p>\u2b07\ufe0f download <pre><code>#!/bin/zsh\nif [[ $SHELL != '/bin/zsh' ]]; then\n  echo \"Please set ZSH as your default shell\" &amp;&amp; exit 1\nfi\n\nbrew install openjdk@11\nbrew install openjdk@17\nsudo ln -sfn $(brew --prefix openjdk@11)/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-11.jdk\nsudo ln -sfn $(brew --prefix openjdk@17)/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk\necho 'alias java11=\"export JAVA_HOME=$(/usr/libexec/java_home -v 11); java -version\"' &gt;&gt; ~/.zshrc\necho 'alias java17=\"export JAVA_HOME=$(/usr/libexec/java_home -v 17); java -version\"' &gt;&gt; ~/.zshrc\n</code></pre></p>"},{"location":"macos-setup/#docker","title":"Docker","text":"<p>See:</p> <ul> <li>Docker without Docker Desktop on MacOS</li> <li>Running amd64 Docker images on Apple M1/M2</li> </ul>"},{"location":"macos-setup/#disable-drag-to-top-opening-mission-controll","title":"Disable \"drag to top\" opening Mission Controll","text":""},{"location":"macos-setup/#macos-13-ventura","title":"MacOS 13 Ventura","text":"<p>Go to <code>System setting</code> &gt; <code>Desktop and Dock</code> Scroll to <code>Mission Control</code> Uncheck \"Displays have separate Spaces\" then log out and back in again.</p>"},{"location":"macos-setup/#before-macos-13-ventura","title":"Before MacOS 13 Ventura","text":"<p>Go to <code>System Preferences</code> &gt; <code>Mission Control</code> Uncheck \"Displays have separate Spaces\" then log out and back in again.</p>"},{"location":"macos-setup/#software","title":"Software","text":"<ul> <li>Logi Options app from Logitech for mouse and keyboard</li> <li>iTerm2 terminal, color preset: Solarized Light </li> <li>Divvy window manager - paid. Allows resizing windows using a nice diagram</li> <li>IntelliJ IDEA - IDE</li> <li>Clipy multi-clipboard</li> <li>Tiles Window Manager - freeware. Allows resizing windows by hotkeys or dragging</li> <li>shell: ZSH + oh-my-zsh</li> <li>https://github.com/rzarajczyk/agnoster-zsh-theme theme for oh-my-zsh: agnoster.rzarajczyk</li> <li>HP Drivers - HP Drivers for older printers (see also this link)</li> <li>Adobe Reader - PDF reader</li> </ul>"},{"location":"macos-setup/#interesting-chrome-extensions","title":"Interesting Chrome Extensions","text":"<ul> <li>Url Editor PRO</li> <li>Tampermonkey</li> <li>ModHeader</li> <li>JSON Formatter</li> <li>EditThisCookie</li> </ul>"},{"location":"macos-setup/#other-interesting-macos-apps","title":"Other interesting MacOS Apps","text":"<ul> <li>BetterTouchTool allows customizing almost everything in MacOS, including TouchBar.</li> </ul>"},{"location":"projects-break-time/","title":"Break time!","text":"<p>A small GUI software that enforces short micro-breaks at configurable intervals. It is designed for eye protection, following ophthalmological guidelines. If you work with a computer for long periods, it's important to periodically look at a distant spot to give your eyes practice in changing focus. This software will enforce you to do so.</p> <p>Written in plain Java. The UI is created using Swing, with extensive help from the NetBeans UI Designer.</p> <p></p>"},{"location":"projects-break-time/#history","title":"History","text":"<p>This project was written more than 10 years ago in some old version of Java by inexperienced version of me :-)</p> <p>In 2024, it was resurrected by upgrading to Java 21, updating dependencies and fixing compatibility issues. However, no source code was modified except for the necessary compatibility issues - it might feel like a time-travel experience!</p>"},{"location":"projects-break-time/#usage","title":"Usage","text":"<p>Just run the JAR file. The software will sit in the system tray and enforce breaks at the configured intervals.</p>"},{"location":"projects-break-time/#links","title":"Links","text":"<p>Source code: https://github.com/rzarajczyk/break-time</p> <p>Download: https://github.com/rzarajczyk/break-time/releases/latest</p>"},{"location":"projects-break-time/#compatibility","title":"Compatibility","text":"<p>Tested on Windows 10 and macOS.</p> <p>It will likely work on Linux as well (well it's Java), but I haven't checked it.</p> <p>Requires Java 21</p>"},{"location":"projects-family-rules-android/","title":"Family Rules Android","text":"<p>This is an ongoing project. It has bugs!</p> <p>It has still many bugs! I use it at home, but keep in mind that it's not a commercial product.</p> <p>My playground in Android development and GitHub Copilot. Doesn't work yet!</p> <p>Source code</p>"},{"location":"projects-family-rules-api/","title":"Family Rules Server - Client API","text":"<p>This is an ongoing project. It has bugs!</p> <p>It has still many bugs! I use it at home, but keep in mind that it's not a commercial product.</p> <p>This is an API used by the clients to communicate with the server.</p>"},{"location":"projects-family-rules-api/#initial-setup","title":"Initial setup","text":"<p>This request should be executed only once, after the client is installed. It registers the client in the server.</p> <pre><code>export HOST=\"http://localhost:8080\"         # The address of the server\nexport INSTANCE_NAME=\"new-instance\"         # The name of the device\nexport CLIENT_TYPE=\"custom\"                 # The type of the client - it's a custom value, can be anything\nexport USERNAME=\"username\"                  # The username of the administrator \nexport PASSWORD=\"password\"                  # The password of the administrator  \n\ncurl --header \"Content-Type: application/json\" \\\n  --request POST \\\n  --user \"$USERNAME:$PASSWORD\" \\\n  --data \"{\\\"instanceName\\\":\\\"$INSTANCE_NAME\\\",\\\"clientType\\\":\\\"$CLIENT_TYPE\\\"}\" \\\n  \"$HOST/api/v1/register-instance\"\n</code></pre> <p>Sample response: <pre><code>{\n  \"status\":\"SUCCESS\",\n  \"instanceId\":\"81cc589b-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n  \"token\":\"0e26aeb3-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n}\n</code></pre></p>"},{"location":"projects-family-rules-api/#launching-instance","title":"Launching instance","text":"<p>This request should be executed every time the client is started. It informs the server that the client is active and updates some basic metadata about the client. </p> <p><pre><code>export HOST=\"http://localhost:8080\"       # The address of the server\nexport USERNAME=\"username\"                # The username of the administrator\nexport INSTANCE_ID=\"81cc589b-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"   # The device ID from the server\nexport TOKEN=\"0e26aeb3-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"         # The token from the server \n\nexport VERSION=\"v1\"                        # The version of the client. While technically it can be anything, I strongly recommended to use reasonable versioning\n\ncurl --header \"Content-Type: application/json\" \\\n  --request POST \\\n  --user \"$USERNAME:$TOKEN\" \\\n  --data '{\n  \"instanceId\": \"'\"$INSTANCE_ID\"'\",\n  \"version\": \"'\"$VERSION\"'\",\n  \"availableStates\": [\n    {\n      \"deviceState\": \"ACTIVE\",\n      \"title\": \"Active\",\n      \"icon\": \"&lt;path d=\\\"m424-296 282-282-56-56-226 226-114-114-56 56 170 170Zm56 216q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\\\"/&gt;\",\n      \"description\": null\n    }\n  ]\n}' \\\n  \"$HOST/api/v1/launch\"\n</code></pre> Notes:</p> <ul> <li><code>availableStates</code> is a list of states that the client can be in.<ul> <li><code>deviceState</code> is the internal name of the state</li> <li><code>title</code> is the human-readable name</li> <li><code>icon</code> (optional) is the SVG icon that will be displayed in the Family Rules Server UI (without the <code>&lt;svg&gt;</code> tag itself)</li> <li><code>description</code> (optional) is the additional, descriptive text which will be displayed in the Family Rules Server UI</li> </ul> </li> </ul>"},{"location":"projects-family-rules-api/#sending-report","title":"Sending report","text":"<p>This request should be executed periodically, to send the usage statistics to the server. It's recommended to execute this request every 15 secs.</p> <p><pre><code>export HOST=\"http://localhost:8080\"       # The address of the server\nexport USERNAME=\"username\"                # The username of the administrator\nexport INSTANCE_ID=\"81cc589b-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"   # The device ID from the server\nexport TOKEN=\"0e26aeb3-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"         # The token from the server \n\ncurl --header \"Content-Type: application/json\" \\\n  --request POST \\\n  --user \"$USERNAME:$TOKEN\" \\\n  --data '{\n    \"instanceId\": \"'\"$INSTANCE_ID\"'\",\n    \"screenTime\": 5,\n    \"applications\": {\n      \"YouTube\": 5\n    }\n  }' \\\n  \"$HOST/api/v1/report\"\n</code></pre> Notes:</p> <ul> <li><code>screenTime</code> is the total time the device's screen was on in seconds</li> <li><code>applications</code> is a map of application names and their usage time in seconds</li> </ul> <p>Sample response: <pre><code>{\n  \"deviceState\":\"ACTIVE\"\n}\n</code></pre></p> <p>The deviceState shows the current state of the device. The client should take action based on this value.</p>"},{"location":"projects-family-rules-client/","title":"Family Rules Client","text":"<p>This is an ongoing project. It has bugs!</p> <p>It has still many bugs! I use it at home, but keep in mind that it's not a commercial product.</p> <p>A client application that enforces the rules on the client's computer. Written in Python (PySide6), distributed as a standalone application in a Windows and macOS version.</p> <p>The UI is in Polish only!</p> <p></p> <p>What's interesting, to write this app I had to learn how to create a standalone application in Python. I learned PySide6 and QtDesigner, how to package the app with PyInstaller, how to create installers for Windows and macOS. Moreover, implementation of the \"lock screen\" required a bit of unusual code - it had to be a window, which covers the whole screen, it had to be on top of all other windows, and the child should not be able to close it.</p> <p>It was a great learning experience.</p>"},{"location":"projects-family-rules-client/#supported-client-states","title":"Supported client states","text":"<ul> <li>Active (default; usage is permitted)</li> <li>Locked (the lock screen is shown above all other windows, preventing the user from using the device)</li> <li>Locked with countdown (Locked, but before the lock screen is shown, a 60s countdown is displayed)</li> <li>Logged out (the user is forced to be logged out from the device)</li> <li>Logged out with countdown (Logged out, but before the lock screen is shown, a 60s countdown is displayed)</li> <li>App disabled (the app is completely disabled)</li> </ul>"},{"location":"projects-family-rules-client/#links","title":"Links","text":"<ul> <li>Source code</li> <li>Downloads</li> </ul>"},{"location":"projects-family-rules-client/#usage","title":"Usage","text":"<p>Download and install the software. The first time you run it, you will be asked for the server address, administrator username and password and the device name.</p> <p>After that, the app will start automatically with the system and enforce the rules.</p> <p>However, there are some quirks/bugs you have to be aware of:</p> <ul> <li> the macOS installer window has invalid icon location. So you have to scroll the window horizontally do see the icon,   which you have to drag to the Applications folder.</li> <li> the app is not signed, so you have to allow it in the system settings. On macOS, you have to allow it in the Security   settings. On Windows, you have to allow it in the SmartScreen settings.</li> <li> if you're upgrading the app, first set the device stare to \"App disabled\" on the server, then upgrade the app, then   set the device state back to \"Active\". Otherwise, the app will not work correctly.</li> </ul>"},{"location":"projects-family-rules-server/","title":"Family Rules Server","text":"<p>This is an ongoing project. It has bugs!</p> <p>It has still many bugs! I use it at home, but keep in mind that it's not a commercial product.</p> <p>A backend server that manages the rules and provides an API for clients. It also provides the web UI for administrator. Written in Kotlin, distributed as Docker image.</p> <p>Requires PostgreSQL.</p> <p> </p>"},{"location":"projects-family-rules-server/#links","title":"Links","text":"<ul> <li>Source code</li> <li>Docker hub</li> </ul>"},{"location":"projects-family-rules-server/#usage-docker-compose","title":"Usage - docker compose","text":"<pre><code>services:\n  postgres:\n    container_name: postgres\n    image: postgres:14-alpine\n    restart: unless-stopped\n    ports:\n      - 5432:5432\n    volumes:\n      - ./data/postgres:/var/lib/postgresql/data\n    environment:\n      - POSTGRES_PASSWORD=&lt;some password&gt;\n      - POSTGRES_USER=&lt;some user&gt;\n      - POSTGRES_DB=&lt;some name&gt;\n\n  family:\n    container_name: family\n    image: rzarajczyk/family-rules-server:latest\n    restart: unless-stopped\n    ports:\n      - 8080:8080\n    environment:\n      - PG_HOSTNAME=postgres\n      - PG_PORT=5432\n      - PG_DBNAME=&lt;some name&gt;\n      - PG_USER=&lt;some user&gt;\n      - PG_PASS=&lt;some password&gt;\n      - ADMIN_USER=&lt;some admin user&gt;        # default username\n      - ADMIN_PASS=&lt;some admin password&gt;    # default password\n      - SPRING_PROFILES_ACTIVE=prod\n</code></pre>"},{"location":"projects-family-rules-server/#client-api","title":"Client API","text":"<p>See Family Rules Server - Client API for details.</p>"},{"location":"projects-family-rules-sony-bravia-tv/","title":"Family Rules Sony Bravia client","text":"<p>This is an ongoing project. It has bugs!</p> <p>It has still many bugs! I use it at home, but keep in mind that it's not a commercial product.</p> <p>A simple Python-based client for a Sony Bravia TV. Tested on <code>Sony Bravia KD-49XH8505</code>.</p> <p>It should run on some server inside home network and communicates with the TV using the Sony API and Chromecast protocol.</p> <p>Distributed as a Docker image.</p>"},{"location":"projects-family-rules-sony-bravia-tv/#supported-tv-states","title":"Supported TV states","text":"<ul> <li>Active (default; usage is permitted)</li> <li>Turned off (the TV is turned off immediately after being turned on)</li> </ul>"},{"location":"projects-family-rules-sony-bravia-tv/#links","title":"Links","text":"<ul> <li>Source code</li> <li>Docker hub</li> </ul>"},{"location":"projects-family-rules-sony-bravia-tv/#usage-docker-compose","title":"Usage - docker compose","text":"<p>The app does not perform the initial setup</p> <p>You have to manually execute the initial setup request, and collect the instance-id and token from the response. It's a one-time action, but it's required.</p> <pre><code>services:\n  sony:\n    container_name: sony\n    image: rzarajczyk/family-rules-sony-bravia-client:latest\n    restart: unless-stopped\n    volumes:\n      - ./config/sony-bravia-family-rules.yaml:/app/config.yaml\n      - ./data/family-rules-sony-bravia-client:/app/data  # optional, for storing usage data\n    depends_on:\n      - family  # optional, wait for Family Rules Server\n</code></pre> <p>sony-bravia-family-rules.yaml</p> <pre><code>timezone: \"Europe/Warsaw\"\ninterval-seconds: 10            # How often should the app check if the TV is on\n\ntv:\n  name: \"SONY KD-49XH8505\"      # The name of the TV\n  ip: '192.168.xx.xxx'          # The IP address of the TV\n  mac: '4C:EB:XX:XX:XX:XX'      # The MAC address of the TV\n  pin: '1234'                   # The PIN code for the TV, set in the TV settings\n  unique-id: 'sony kd-49xh8505' # Whatever you want, it's used as a unique identifier for the TV\n\nfamily-rules-server:\n  host: http://family:8080      # The address of the Family Rules Server\n  user: admin                   # The username of the administrator\n  instance-name: sony-tv        # The name of the device in the Family Rules Server\n  instance-id: 81cc589b-xxxx-xxxx-xxxx-xxxxxxxxxxxx  # The device ID from the Family Rules Server\n  token: 0e26aeb3-xxxx-xxxx-xxxx-xxxxxxxxxxxx        # The token from the Family Rules Server  \n</code></pre>"},{"location":"projects-family-rules/","title":"Family Rules","text":"<p>This is an ongoing project. It's a set of applications that help to manage a screen time for children.</p> <p>Of course there are many commercial solutions for this, but I wanted to create something that will allow to get usage statistics from all the devices I have at home (Windows, macOS, Android phone and tablet, Sony Bravia TV) in one place.</p> <p>It's designed in a client-server architecture, where the Server is the central point of managing the rules and collecting statistics, and the clients are enforcing the rules on the devices. The clients are also sending the usage statistics. The architecture is open, which means there's a well-defined REST API between a client and a server, so it's possible to create a client for any device.</p> <p>This is an ongoing project. It has bugs!</p> <p>It has still many bugs! I use it at home, but keep in mind that it's not a commercial product.</p>"},{"location":"projects-family-rules/#components","title":"Components","text":"<ul> <li>Family Rules Server - the central point of managing the rules and collecting     statistics.</li> <li>Family Rules Client - the client for Windows and macOS.</li> <li>Family Rules Sony Bravia client - the client for Sony Bravia TV.</li> <li>Family Rules Android - the Android client (not working yet).</li> </ul>"},{"location":"projects-family-rules/#plans-for-the-future","title":"Plans for the future","text":"<ul> <li>fixing bugs</li> <li>creating the Android client</li> <li>integration with Home Assistant</li> </ul>"},{"location":"projects-family-rules/#third-party-alternatives","title":"Third party alternatives","text":"<p>There are many commercial solutions for managing screen time for children. Taking into account possibilities and price, I can recommend:</p>"},{"location":"projects-family-rules/#android","title":"Android","text":"<ul> <li>Google Family Link - is a free software from Google. If you're looking for   parental control for Android, this is the first thing you should try.</li> <li>Eset Parental Control - it's unique feature is the ability to   group the apps info \"unrestricted\" and \"time limited\" groups, and set the time limits for the whole group. So you can   set limits for all games and streamings at once, while leaving the educational apps unrestricted. It's a paid app,   however it has a generous free tier - it's very likely you won't need to pay for Premium, if you combine it with the   Family Link.</li> </ul>"},{"location":"projects-family-rules/#windows","title":"Windows","text":"<ul> <li>Microsoft Family Safety - it's free, and it's built-in in Windows 10 and 11.   It's a good starting point. </li> </ul>"},{"location":"projects-hue-setup/","title":"Hue Setup","text":"<p>This is an app for automating the setup of a Philips Hue bridge. It keeps the setup of the whole bridge (lights, automations, etc.) in a YAML file, so it can be easily restored.</p>"},{"location":"projects-hue-setup/#warning-this-app-is-destructive","title":"WARNING: this app is destructive!","text":"<p>This app is destructive - it will destroy your current configuration. Don't use it \"just to check\" - you will regret it!</p> <p>Not recommended for the general usage. It's a tool for me, I share the source code with you for your curiosity, but it's not a commercial product.</p> <p>I do not provide any further documentation or support for this app. If you want to use it, you need to read the source code.</p> <p>Link: https://github.com/rzarajczyk/hue-setup</p>"},{"location":"projects-memo-education/","title":"memo.education","text":"<p>A tool for primary school children helping them to master basic mathematical operations.</p> <p></p> <p>Link: https://memo.education</p>"},{"location":"projects-smart-home/","title":"Various smart home projects","text":"<ul> <li>rtsp-saver - Save RTSP stream from security cameras to a file</li> <li>deser - Simple lib for deserializing and serializing data from/to JSON</li> <li>Actions Server - A very simple, multithreaded HTTP server in Python.</li> <li>backuper - A simple backup tool.</li> <li>hp-to-mqtt - A tool to send HP printer status to MQTT</li> <li>xiaomi-air-humidifier-to-mqtt - A tool to control   Xiaomi Air Humidifier over MQTT</li> <li>xiaomi-air-quality-monitor-to-mqtt - A tool to   control Xiaomi Air Quality Monitor over MQTT</li> <li>xiaomi-air-purifier-to-mqtt - A tool to control Xiaomi   Air Purifier over MQTT</li> <li>homie-helpers - A set of helpers for Homie IoT convention</li> <li>mqtt-to-graphite - A tool to create Graphite metrics from MQTT messages</li> <li>mqtt-tree - A tool to visualize MQTT topics</li> <li>service-bootstrap - A tool making easier to create REST microservice in Python</li> </ul>"},{"location":"projects-solr-ids-export-plugin/","title":"Solr IdsExportPlugin","text":"<p>Solr Plugin I wrote when I worked for Allegro.</p> <p>A plugin (to be more precise: set of plugins) for Solr allowing time-efficient export of Ids of all found documents (or any DocValues-enabled field values) in comma-separated format without sorting. Lack of result sorting results in significantly better performance then Solr build-in <code>/export</code> endpoint.</p> <p>Link: IdsExportPlugin</p>"},{"location":"solr-core-configuration/","title":"Solr core configuration","text":""},{"location":"solr-core-configuration/#docs-and-sources","title":"Docs and sources:","text":"<ul> <li>solrconfig.xml</li> <li>managed-schema.xml</li> <li>Field Types Included with Solr</li> <li>docValues</li> <li>Understanding SOLR Field Properties: Indexed, Stored and docValues</li> <li>DocValues VS Stored Fields: Apache Solr Features and Performance SmackDown</li> <li>Document Analysis</li> <li>External files</li> </ul>"},{"location":"solr-core-configuration/#file-structure-of-a-coreconf-directory","title":"File structure of a <code>core/conf</code> directory","text":"<pre><code>rafal@MacBook-Pro-Rafal solr-9.7.0 % ls -l server/solr/mycore/conf\ntotal 108\ndrwxr-xr-x 41 rafal staff  1312 Sep  4 00:06 lang\n-rw-r--r--  1 rafal staff 50695 Sep  4 00:06 managed-schema.xml\n-rw-r--r--  1 rafal staff   873 Sep  4 00:06 protwords.txt\n-rw-r--r--  1 rafal staff 44800 Sep  4 00:06 solrconfig.xml\n-rw-r--r--  1 rafal staff   781 Sep  4 00:06 stopwords.txt\n-rw-r--r--  1 rafal staff  1124 Sep  4 00:06 synonyms.txt\n</code></pre> <p>Most important files:</p> <ul> <li><code>managed-schema.xml</code> - schema of the data. Previously known as <code>schema.xml</code></li> <li><code>solrconfig.xml</code> - configuration of the core, for example:<ul> <li>defining handlers (<code>/select</code> for searching, <code>/update</code> for indexing), query parsers, etc</li> <li>adding plugins</li> <li>merge policy</li> <li>replication</li> <li>see docs</li> </ul> </li> </ul>"},{"location":"solr-core-configuration/#managed-schemaxml","title":"<code>managed-schema.xml</code>","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;schema name=\"default-config\" version=\"1.7\"&gt;\n    &lt;!-- field types --&gt;\n    &lt;fieldType name=\"string\" class=\"solr.StrField\" docValues=\"true\"/&gt;\n\n    &lt;!-- fields --&gt;\n    &lt;field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\"/&gt;\n    &lt;dynamicField name=\"*_s\" type=\"string\"/&gt;\n\n    &lt;!-- unique key --&gt;\n    &lt;uniqueKey&gt;id&lt;/uniqueKey&gt;\n\n    &lt;!-- copy fields --&gt;\n    &lt;copyField source=\"sourceFieldName\" dest=\"destinationFieldName\"/&gt;\n&lt;/schema&gt;\n</code></pre> <p>A good documentation is in the comments in the default <code>managed-schema.xml</code> file in the Solr distribution: managed-schema.xml</p>"},{"location":"solr-core-configuration/#noteworthy-field-types","title":"Noteworthy: field types","text":"<pre><code>&lt;fieldType\n        name=\"id\"\n        class=\"solr.StrField\"\n        sortMissingLast=\"true\"\n        sortMissingFirst=\"false\"\n        multiValued=\"false\"\n        indexed=\"true\"\n        stored=\"true\"\n        docValues=\"true\"\n/&gt;\n</code></pre> <p>All field types: Field Types Included with Solr</p> <p>Some common types:</p> <ul> <li><code>solr.StrField</code> - text saved \"as is\", not analyzed, not tokenized</li> <li><code>solr.TextField</code> - text after tokenization and analysis</li> <li><code>solr.BoolField</code></li> <li><code>solr.DoublePointField</code></li> <li><code>solr.IntPointField</code></li> <li><code>solr.DatePointField</code></li> <li><code>solr.ExternalFileField</code> - value of this field os stored in a separate file, mainly for function queries</li> </ul>"},{"location":"solr-core-configuration/#three-important-data-structures-indexedstoreddocvalues","title":"Three important data structures: indexed/stored/docValues","text":"<p>Let's say we have the following documents:</p> <pre><code>&lt;add&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 1&lt;/field&gt;\n        &lt;field name=\"name\"&gt;VW Golf hatchback&lt;/field&gt;\n        &lt;field name=\"price\"&gt;200&lt;/field&gt;\n    &lt;/doc&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 2&lt;/field&gt;\n        &lt;field name=\"name\"&gt;Toyota Corolla hatchback&lt;/field&gt;\n        &lt;field name=\"price\"&gt;100&lt;/field&gt;\n    &lt;/doc&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 3&lt;/field&gt;\n        &lt;field name=\"name\"&gt;Toyota Auris Touring&lt;/field&gt;\n      &lt;field name=\"price\"&gt;50&lt;/field&gt;\n    &lt;/doc&gt;\n&lt;/add&gt;\n</code></pre>"},{"location":"solr-core-configuration/#inverted-index-indexedtrue","title":"Inverted index: <code>indexed=\"true\"</code>","text":"<p>Per-field data structure, pointing from tokens (words) to docIds</p> <pre><code>Index for field \"name\":\n    \"vw\"        =&gt; Car 1\n    \"golf\"      =&gt; Car 1\n    \"hatchback\" =&gt; Car 1, Car 2\n    \"toyota\"    =&gt; Car 2, Car 3\n    \"corolla\"   =&gt; Car 2\n    \"auris\"     =&gt; Car 3\n    \"touring\"   =&gt; Car 3\n\nIndex for field \"price\":\n    50          =&gt; Car 3\n    100         =&gt; Car 2\n    200         =&gt; Car 1 \n</code></pre> <p>Used for quick searching for documents with given tokens</p> Example <ol> <li>Query: \"Toyota Hatchback\"</li> <li>Index lookup:</li> </ol> <pre><code>    \"toyota\"    =&gt; Car 2, Car 3\n    \"hatchback\" =&gt; Car 1, Car 2\n</code></pre> <ol> <li>Intersection of those sets: <code>{Car 2, Car 3} \u2229 {Car 1, Car 2} = {Car 2}</code></li> <li>Final result set: <code>{Car 2}</code></li> </ol> <p>Use cases: full-text search or filtering</p>"},{"location":"solr-core-configuration/#column-based-token-storage-docvaluestrue","title":"Column-based token storage: <code>docValues=\"true\"</code>","text":"<p>Per-field data structure, pointing from docIds to field values. See docValues docs</p> <p>Note: docValues can be enabled only for some field typed. <code>TextField</code> is not among them.</p> <pre><code>DocValues for field \"name\":\n    &lt;can't be created&gt;\n\nDocValues for field \"price\":\n   Car 1 =&gt; 200\n   Car 2 =&gt; 100\n   Car 3 =&gt; 50\n</code></pre> <p>Used for retrieving valued during operations like sorting or faceting</p> <p>Use cases:</p> <ul> <li>sorting</li> <li>faceting</li> <li>grouping</li> <li>function queries</li> <li>sometimes retrieving the values, but it's limited -   see docs</li> </ul>"},{"location":"solr-core-configuration/#row-based-original-values-storage-storedtrue","title":"Row-based original values storage: <code>stored=\"true\"</code>","text":"<p>Stored fields are used to store the original (not analysed) value per document:</p> <pre><code>Stored values for Car 1:\n    name: \"VW Golf hatchback\"\n    price: 200\n\nStored values for Car 2:\n    name: \"Toyota Corolla hatchback\"\n    price: 100\n\nStored values for Car 3:\n    name: \"Toyota Auris Touring\"\n    price: 50\n</code></pre> <p>Use cases: when we want to get the values from the index</p> <p>Tip</p> <p>The common practice is NOT using search engine for retrieving values, due to performance reasons. Usually it's enough to return only docIds from the search engine, and use some external storage to hydrate the data.</p>"},{"location":"solr-core-configuration/#textfields-analyzers-and-tokenizers","title":"TextFields: analyzers and tokenizers","text":"<p>In case of <code>solr.TextField</code>, it's possible to define how the field is analyzed (modified) during indexing, separately for the querying and indexing</p> <pre><code>&lt;fieldType name=\"text_general\" class=\"solr.TextField\" positionIncrementGap=\"100\" multiValued=\"true\"&gt;\n  &lt;analyzer type=\"index\"&gt;\n    &lt;tokenizer name=\"standard\"/&gt;\n    &lt;filter name=\"stop\" ignoreCase=\"true\" words=\"stopwords.txt\" /&gt;\n    &lt;filter name=\"lowercase\"/&gt;\n  &lt;/analyzer&gt;\n  &lt;analyzer type=\"query\"&gt;\n    &lt;tokenizer name=\"standard\"/&gt;\n    &lt;filter name=\"stop\" ignoreCase=\"true\" words=\"stopwords.txt\" /&gt;\n    &lt;filter name=\"synonymGraph\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/&gt;\n    &lt;filter name=\"lowercase\"/&gt;\n  &lt;/analyzer&gt;\n&lt;/fieldType&gt;\n</code></pre> <p>tokenizer - how to split text into tokens, some examples:</p> <ul> <li><code>standard</code> - splits by whitespace and punctuation</li> <li><code>whitespace</code> - splits by whitespace</li> <li><code>pattern</code>, <code>simplePattern</code> - splits by regexp</li> <li><code>keyword</code> - does not split, treat the whole string as a single token</li> <li><code>nGram</code> - splits into substrings of a specific length</li> <li><code>pathHierarchy</code> - used to tree-like paths (f.ex. directory structure)</li> <li>and more...</li> </ul> <p>filter - how to modify tokens, some examples:</p> <ul> <li><code>asciiFolding</code> - replaces national characters with latin equivalents (<code>\u0105</code> =&gt; <code>a</code>)</li> <li><code>englishMinimalStem</code> - changes plurals into singulars (English)</li> <li><code>lowercase</code> - lowercase</li> <li><code>stop</code> - filters our stopwords</li> <li><code>shingle</code> - creates groups of consecutive tokens</li> <li><code>synonymGraph</code> - allows to define synonyms</li> <li>and much more...</li> </ul> <p>See Document Analysis</p>"},{"location":"solr-core-configuration/#support-in-the-solrui","title":"Support in the SolrUI","text":""},{"location":"solr-indexing/","title":"Solr indexing","text":""},{"location":"solr-indexing/#docs-and-sources","title":"Docs and sources:","text":"<ul> <li>Indexing with update handlers</li> <li>Client APIs</li> <li>Partial Updates</li> <li>Commits and Transaction Logs</li> </ul>"},{"location":"solr-indexing/#basic-syntax","title":"Basic syntax","text":"XMLXML in SolrUIXML + curl <pre><code>&lt;add&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 1&lt;/field&gt;\n        &lt;field name=\"name\"&gt;VW Golf hatchback&lt;/field&gt;\n    &lt;/doc&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 2&lt;/field&gt;\n        &lt;field name=\"name\"&gt;Toyota Corolla hatchback&lt;/field&gt;\n    &lt;/doc&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 3&lt;/field&gt;\n        &lt;field name=\"name\"&gt;Toyota Auris Touring&lt;/field&gt;\n    &lt;/doc&gt;\n&lt;/add&gt;\n</code></pre> <pre><code>printf '&lt;add&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 1&lt;/field&gt;\n        &lt;field name=\"name\"&gt;VW Golf hatchback&lt;/field&gt;\n    &lt;/doc&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 2&lt;/field&gt;\n        &lt;field name=\"name\"&gt;Toyota Corolla hatchback&lt;/field&gt;\n    &lt;/doc&gt;\n    &lt;doc&gt;\n        &lt;field name=\"id\"&gt;Car 3&lt;/field&gt;\n        &lt;field name=\"name\"&gt;Toyota Auris Touring&lt;/field&gt;\n    &lt;/doc&gt;\n&lt;/add&gt;' | curl -X POST -H \"Content-Type: text/xml\" --data-binary @- \"http://localhost:8983/solr/mycore/update?commit=true\"\n</code></pre>"},{"location":"solr-indexing/#more-complex-example","title":"More complex example","text":"XMLXML in SolrUIXML + curl <pre><code>&lt;update&gt;\n    &lt;add&gt;\n        &lt;doc&gt;\n            &lt;field name=\"id\"&gt;Car 1&lt;/field&gt;\n            &lt;field name=\"name\"&gt;VW Golf hatchback&lt;/field&gt;\n        &lt;/doc&gt;\n        &lt;doc&gt;\n            &lt;field name=\"id\"&gt;Car 2&lt;/field&gt;\n            &lt;field name=\"name\"&gt;Toyota Corolla hatchback&lt;/field&gt;\n        &lt;/doc&gt;\n        &lt;doc&gt;\n            &lt;field name=\"id\"&gt;Car 3&lt;/field&gt;\n            &lt;field name=\"name\"&gt;Toyota Auris Touring&lt;/field&gt;\n        &lt;/doc&gt;\n    &lt;/add&gt;\n    &lt;delete&gt;\n        &lt;id&gt;Car 1&lt;/id&gt;\n    &lt;/delete&gt;\n    &lt;commit /&gt;\n    &lt;optimize /&gt;\n&lt;/update&gt;\n</code></pre> <pre><code>printf '&lt;update&gt;\n    &lt;add&gt;\n        &lt;doc&gt;\n            &lt;field name=\"id\"&gt;Car 1&lt;/field&gt;\n            &lt;field name=\"name\"&gt;VW Golf hatchback&lt;/field&gt;\n        &lt;/doc&gt;\n        &lt;doc&gt;\n            &lt;field name=\"id\"&gt;Car 2&lt;/field&gt;\n            &lt;field name=\"name\"&gt;Toyota Corolla hatchback&lt;/field&gt;\n        &lt;/doc&gt;\n        &lt;doc&gt;\n            &lt;field name=\"id\"&gt;Car 3&lt;/field&gt;\n            &lt;field name=\"name\"&gt;Toyota Auris Touring&lt;/field&gt;\n        &lt;/doc&gt;\n    &lt;/add&gt;\n    &lt;delete&gt;\n        &lt;id&gt;Car 1&lt;/id&gt;\n    &lt;/delete&gt;\n    &lt;commit /&gt;\n    &lt;optimize /&gt;\n&lt;/update&gt;' | curl -X POST -H \"Content-Type: text/xml\" --data-binary @- \"http://localhost:8983/solr/mycore/update\"\n</code></pre>"},{"location":"solr-indexing/#alternatives","title":"Alternatives","text":"<p>There are also the official clients for Java, JavaScript, Python and Ruby</p> <p>Solr also supports other data formats (like JSON), however XML seems to be the most popular</p> <p>There's also a special syntax for partial updates, where we want to update just a few fields, while leaving others untouched: Partial Updates</p>"},{"location":"solr-indexing/#why-my-changes-are-not-visible-commit-changes","title":"Why my changes are not visible? Commit changes","text":"<p>In order to make the data visible while searching, you have to commit changes.</p> <p>Soft commit (for visibility, faster)</p> <ul> <li>makes the documents visible for searches</li> </ul> <p>Hard commit (for durability, slower)</p> <ul> <li>ensures index files (segments) are fully written to the disk (fsync)</li> <li>closes transaction log and opens a new one</li> </ul>"},{"location":"solr-indexing/#how-to-commit-data","title":"How to commit data?","text":"<ol> <li>Manually: use the URL parameter <code>?commit=true</code> or <code>?softCommit=true</code> in update requests.</li> <li>Manually: use command <code>&lt;commit /&gt;</code> in update XML (hard commit)</li> <li>Automatically: define <code>&lt;autoCommit /&gt;</code> and/or <code>&lt;autoSoftCommit /&gt;</code> in <code>solrconfig.xml</code>; you can set <code>maxDocs</code>, <code>maxTime</code>, <code>maxSize</code></li> </ol>"},{"location":"solr-indexing/#transaction-log-tlog","title":"Transaction Log (tlog)","text":"<p>Log of all updates since the last hard commit. If Solr is not shutdown gracefully, it will replay updates from the tlog at startup.</p>"},{"location":"solr-querying/","title":"Solr querying","text":""},{"location":"solr-querying/#docs-and-sources","title":"Docs and sources:","text":"<ul> <li>Query Syntax and Parsers</li> <li>Common Query Parameters</li> <li>Standard Query Parser</li> <li>DixMax Query Parser</li> <li>Extended DisMax (eDisMax) Query Parser</li> </ul>"},{"location":"solr-querying/#how-do-send-queries-to-solr","title":"How do send queries to Solr?`","text":"<p>Basic example:</p> HTTP APISolrUI <pre><code>curl \"http://localhost:8983/solr/mycore/select?q=*:*\"\n</code></pre> <p></p>"},{"location":"solr-querying/#about-queryparsers","title":"About QueryParsers","text":"<p>The query syntax is strictly dependent on the QueryParser being used. Each parser has different syntax and capabilities.</p>"},{"location":"solr-querying/#common-query-parameters","title":"Common query parameters","text":"<p>Full list and description: Common Query Parameters</p> <p>Some examples:</p> param description examples defaultValue <code>defType</code> which QueryParser should be used <ul><li><code>dismax</code></li><li><code>edismax</code></li><li><code>lucene</code></li></ul> <code>lucene</code> <code>q</code> main query depending on QueryParser none <code>fq</code> filter query <code>fq=popularity:[10 TO *]&amp;fq=section:0</code> none <code>sort</code> result set sorting order <ul><li><code>score desc</code></li><li><code>price asc, name desc</code></li><li><code>price asc, div(popularity,price) asc</code></li></ul> <code>score desc</code> <code>start</code> for pagination: offset of page start <code>0</code> <code>0</code> <code>rows</code> for pagination: number of documents <code>72</code> <code>10</code> <code>fl</code> fields to retrieve <ul><li><code>id,name,price</code></li><li><code>id na* price</code></li><li><code>*</code></li><li><code>div(popularity,price)</code></li></ul> <code>*</code> <code>debug</code> return debug information <ul><li><code>query</code></li><li><code>timing</code></li><li><code>results</code></li><li><code>all</code></li></ul> none <code>timeAllowed</code> the amount of time, in milliseconds, allowed for a search to complete 2000 none <code>wt</code> output format <ul><li><code>json</code></li><li><code>xml</code></li><li><code>csv</code></li></ul> <code>json</code> <code>echoParams</code> should the query parameters be included in the response <ul><li><code>all</code></li><li><code>none</code></li><li><code>explicit</code></li></ul> <code>none</code> <p>Additionally, you can specify:</p> <ul> <li>Faceting</li> <li>Highlighting</li> </ul>"},{"location":"solr-querying/#lucene-query-parser-default","title":"Lucene Query Parser (default)","text":"<p>Example:</p> <pre><code>curl \"http://localhost:8983/solr/mycore/select?defType=lucene&amp;q=*:*\"\n</code></pre> <p>Docs: Standard Query Parser</p> param description defaultValue <code>q</code> main query (mandatory); see examples below none <code>q.op</code> <code>AND</code> or <code>OR</code>, relation between tokens <code>OR</code> <code>df</code> which (single) field should be searched, eg. <code>name</code> none <p>The main query syntax by example:</p> <ul> <li><code>vw golf</code> - searches for these words in fields defined in <code>df</code>, and joins them using <code>q.op</code></li> <li><code>\"vw golf\"</code> - quotes mark phrases. Tokens must be next to each other.</li> <li><code>gol?</code>, <code>gol*</code> - wildcards are supported</li> <li><code>golf~2</code> - tilde after word (not phrase) - fuzzy searching, finds similar words</li> <li><code>\"vw golf\"~3</code> - tilde after phrase (not word) - proximity search, tokens <code>vw</code> and <code>golf</code> must be within 3 words of   each other</li> <li><code>name:vw</code> - possibility to define explicit fields - <code>&lt;field-name&gt;:&lt;query&gt;</code></li> <li><code>name:\"vw golf\"</code>, <code>name:gol?</code>, <code>name:gol*</code>, <code>name:golf~2</code> - it's all supported</li> <li><code>name:*</code> - finds documents, which have some value in field <code>name</code> set</li> <li><code>price:[52 TO 1000]</code> - ranges for numeric fields (including those borders)</li> <li><code>price:{52 TO 1000}</code> - ranges for numeric fields (EXCLUDING those borders)</li> <li><code>price:{52 TO 1000]</code>, <code>price:[* TO 1000]</code> - also possible</li> <li><code>vw^4 golf</code> - boosting; token <code>vw</code> is boosted (more important) four times</li> <li><code>vw OR golf</code>, <code>vw AND golf</code>, <code>vw || golf</code>, <code>vw &amp;&amp; golf</code> - explicitly specify operator between tokens</li> <li><code>\"vw golf\" OR toyota</code> - also possible</li> <li><code>(vw AND golf) OR toyota</code> - also possible</li> <li><code>vw NOT golf</code>, <code>vw ! golf</code> - excluding tokens</li> <li><code>+vw -golf</code> - must include <code>vw</code>, cannot include <code>golf</code></li> </ul>"},{"location":"solr-querying/#dismax","title":"DisMax","text":"<p>Example:</p> <pre><code>curl \"http://localhost:8983/solr/mycore/select?defType=dismax&amp;q=vw+golf&amp;qf=brand^2+model\"\n</code></pre> <p>The main goal of DisMax was to separate the user's query from how the query should be processed. DisMax doesn't support Lucene Query Parser's syntax!</p> <p>Docs: DixMax Query Parser</p> param description defaultValue <code>q</code> main query (mandatory): only basic syntax is supported: <ul><li>quotes for phrases</li><li>SHOULD MATCH: just word without any modifier (default)</li><li>MUST MATCH: +word (prefix <code>+</code>)</li><li>CAN'T MATCH: -word (prefix <code>-</code>)</li></ul> see examples below none <code>q.alt</code> query which should be used if main query is empty none <code>qf</code> which fields should be searched with their weights, eg. <code>brand^2.5 model^0.5</code> none <code>mm</code> minimum should match; number of SHOULD MATCH words that must match the document; might be absolute or percentage none <code>pf</code> phrase fields; if the tokens appear in close proximity in this field, the document is boosted, eg <code>title^4 description^1</code> none <code>ps</code> phrase slop; the maximum distance between tokens to form a phrase none <code>tie</code> tie breaker: see the docs none <code>bq</code> boost query: see the docs none <code>bf</code> boost function: see the docs none <p>The main query syntax by example:</p> <ul> <li><code>q=vw golf&amp;qf=brand^2 model</code> - search for words <code>vw</code> (optional) and <code>golf</code> (optional) in fields <code>brand</code> (higher   priority) and <code>name</code> (lower priority)</li> <li><code>q=+vw golf&amp;qf=brand^2 model</code> - search for words <code>vw</code> (mandatory) and <code>golf</code> (optional) in fields <code>brand</code> (higher   priority) and <code>name</code> (lower priority)</li> <li><code>q=+\"vw golf\"&amp;qf=brand^2 model</code> - search for phrase <code>\"vw golf\"</code> (mandatory) in fields <code>brand</code> (higher   priority) and <code>name</code> (lower priority)</li> <li><code>q=+vw +golf&amp;qf=brand^2 model</code> - search for words <code>vw</code> (mandatory) and <code>golf</code> (mandatory) in fields <code>brand</code> (higher   priority) and <code>name</code> (lower priority)</li> <li><code>q=+vw +golf -toyota&amp;qf=brand^2 model</code> - search for words <code>vw</code> (mandatory) and <code>golf</code> (mandatory) in fields <code>brand</code> (   higher priority) and <code>name</code> (lower priority); documents cannot contain <code>toyota</code></li> <li><code>q=vw golf hatchback&amp;qf=brand^2 model&amp;mm=2</code> - search for words <code>vw</code> (optional) and <code>golf</code> (optional) and   <code>hatchback</code> (optional) in fields <code>brand</code> (higher priority) and <code>name</code> (lower   priority); the document is returned if at least two of these optional words have been found</li> <li><code>q=vw golf hatchback&amp;qf=brand^2 model&amp;mm=50%</code> - search for words <code>vw</code> (optional) and <code>golf</code> (optional) and   <code>hatchback</code> (optional) in fields <code>brand</code> (higher priority) and <code>name</code> (lower   priority); the document is returned if at least half of the optional words have been found </li> <li><code>q=vw golf&amp;qf=brand^2 model&amp;pf=name^5</code> - search for words <code>vw</code> (optional) and <code>golf</code> (optional) in fields <code>brand</code> (   higher priority) and <code>name</code> (lower priority); if the phrase \"vw golf\" if found in field <code>name</code>, boost the document</li> <li><code>q=vw golf&amp;qf=brand^2 model&amp;pf=name^5&amp;ps=4</code> - search for words <code>vw</code> (optional) and <code>golf</code> (optional) in fields   <code>brand</code> (higher priority) and <code>name</code> (lower priority); if the phrase \"vw golf\" if found in field <code>name</code>, boost the   document; maximum allowed distance between these words is 4</li> </ul>"},{"location":"solr-querying/#edismax","title":"eDisMax","text":"<p>Example:</p> <pre><code>curl \"http://localhost:8983/solr/mycore/select?defType=edismax&amp;q=vw+AND+golf&amp;qf=brand^2+model\"\n</code></pre> <p>Extended DisMax, combination DisMax and Lucene Query Parser with add-ons.</p> <p>As a first approximation, you can think of eDixMax as DisMax, where:</p> <ul> <li>you can use <code>AND</code> and <code>OR</code> inside <code>q</code> parameter</li> <li>you can specify a <code>boost</code> function in a better way than in DisMax</li> <li>have some additional enhancements</li> </ul> <p>For better understanding, refer to the docs: Extended DisMax (eDisMax) Query Parser</p>"},{"location":"solr-setup/","title":"Solr setup","text":""},{"location":"solr-setup/#docs-and-sources","title":"Docs and sources:","text":"<p>This introduction is based on the official Solr documentation:</p> <ul> <li>Installing Solr</li> <li>Downloads</li> <li>core.properties</li> </ul>"},{"location":"solr-setup/#download-and-run","title":"Download and run","text":"<pre><code>wget \"https://www.apache.org/dyn/closer.lua/solr/solr/9.7.0/solr-9.7.0.tgz?action=download\" -O solr-9.7.0.tgz\n\ntar -xvzf solr-9.7.0.tgz\ncd solr-9.7.0.tgz\n\n./bin/solr start\n\ncat server/logs/solr.log\n\n./bin/solr status\n</code></pre> <p>Open in the browser: http://localhost:8983/</p> <p></p>"},{"location":"solr-setup/#create-a-core","title":"Create a core","text":"<p>What is a core?</p> <p>Core in Solr is equivalent of a table in PostgreSQL or MySQL or index in Elasticsearch. It is a logical collection of documents.</p> <p><pre><code>./bin/solr create -c mycore\n</code></pre> </p>"},{"location":"solr-setup/#directory-structure-of-a-core","title":"Directory structure of a core","text":"<pre><code>rafal@MacBook-Pro-Rafal solr-9.7.0 % ls -l server/solr/mycore\ntotal 4\ndrwxr-xr-x 8 rafal staff 256 Sep  4 00:06 conf\n-rw-r--r-- 1 rafal staff  76 Oct 26 12:59 core.properties\ndrwxr-xr-x 5 rafal staff 160 Oct 26 12:59 data\n</code></pre> <ul> <li><code>core.properties</code> - this file tells Solr that this directory keeps a Solr core, see core.properties</li> <li><code>conf</code> - configuration</li> <li><code>data</code> - data files. It's safe to clear this directory to remove all data.</li> </ul>"},{"location":"solr-token-matching/","title":"Solr token matching","text":""},{"location":"solr-token-matching/#docs-and-sources","title":"Docs and sources:","text":"<ul> <li>Analysis Screen</li> <li>Language Analysis</li> </ul>"},{"location":"solr-token-matching/#how-do-solr-performs-token-matching","title":"How do Solr performs token matching?","text":"<p>Let's assume we have defined the field <code>name</code> as type <code>text_en</code> from the default <code>managed-schema.xml</code> file in the Solr distribution: managed-schema.xml</p> <p>This fieldType is defined like this:</p> managed-schema.xmlSolrUI <pre><code>    &lt;fieldType name=\"text_en\" class=\"solr.TextField\" positionIncrementGap=\"100\"&gt;\n      &lt;analyzer type=\"index\"&gt;\n        &lt;tokenizer name=\"standard\"/&gt;\n        &lt;!-- in this example, we will only use synonyms at query time\n        &lt;filter name=\"synonymGraph\" synonyms=\"index_synonyms.txt\" ignoreCase=\"true\" expand=\"false\"/&gt;\n        &lt;filter name=\"flattenGraph\"/&gt;\n        --&gt;\n        &lt;!-- Case insensitive stop word removal.\n        --&gt;\n        &lt;filter name=\"stop\"\n                ignoreCase=\"true\"\n                words=\"lang/stopwords_en.txt\"\n            /&gt;\n        &lt;filter name=\"lowercase\"/&gt;\n        &lt;filter name=\"englishPossessive\"/&gt;\n        &lt;filter name=\"keywordMarker\" protected=\"protwords.txt\"/&gt;\n        &lt;!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:\n        &lt;filter name=\"englishMinimalStem\"/&gt;\n        --&gt;\n        &lt;filter name=\"porterStem\"/&gt;\n      &lt;/analyzer&gt;\n      &lt;analyzer type=\"query\"&gt;\n        &lt;tokenizer name=\"standard\"/&gt;\n        &lt;filter name=\"synonymGraph\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/&gt;\n        &lt;filter name=\"stop\"\n                ignoreCase=\"true\"\n                words=\"lang/stopwords_en.txt\"\n        /&gt;\n        &lt;filter name=\"lowercase\"/&gt;\n        &lt;filter name=\"englishPossessive\"/&gt;\n        &lt;filter name=\"keywordMarker\" protected=\"protwords.txt\"/&gt;\n        &lt;!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:\n        &lt;filter name=\"englishMinimalStem\"/&gt;\n        --&gt;\n        &lt;filter name=\"porterStem\"/&gt;\n      &lt;/analyzer&gt;\n    &lt;/fieldType&gt;\n</code></pre> <p></p>"},{"location":"solr-token-matching/#indexing-pipelines","title":"Indexing pipelines","text":"<p>So it has the following index-time analyzers:</p> <ol> <li>tokenizer <code>standard</code> - splits the phrase into tokens by whitespace and punctuation </li> <li>filter <code>stop</code> - removes stopwords defined in <code>lang/stopwords_en.txt</code></li> <li>filter <code>lowercase</code> - makes all tokens lowercase</li> <li>filter <code>englishPossessive</code> - removes <code>'s</code> from words</li> <li>filter <code>keywordMarker</code> - protects words (defined in <code>protowords.txt</code>) from being modified by further stemmers</li> <li>filter <code>porterStem</code> - stemmer, changes the word into it's basic form</li> </ol> <p>On every document update, the field's value is passed by the indexing pipeline to create tokens. We can simulate this process in the Solr's UI</p> <p></p> <p>This is rather self-explanatory.</p> <ol> <li>Standard Tokenizes splits the phrase into tokens by whitespace and punctuation</li> <li>Stopword filter removes the stopword <code>The</code></li> <li>Lowercase filter makes it all lowercase</li> <li>English Possessive changes <code>mark's</code> into <code>mark</code></li> <li>Keyword Marker does nothing in this case (but we could use it to protect f.ex. \"tvs\" from further processing)</li> <li>Stemmer changes words to its stems, here <code>tvs</code> into <code>tv</code></li> </ol>"},{"location":"solr-token-matching/#query-pipeline","title":"Query pipeline","text":"<p>The query-time analyzers defined for this field are similar, except that we have an additional filter: <code>synonymGraph</code> with synonyms defined in <code>synonyms.txt</code> file</p> <p>Every search query is split into tokens by query-time analyzers. So let's check what will happen if we enter some query:</p> <p></p> <ol> <li>Tokenizer splits the query into tokens</li> <li>Synonyms filter creates synonyms for <code>TV</code></li> <li>Lowercase filter makes it all lowercase</li> <li>English Possessive checks for <code>'s</code> (there are no words like this in the query)</li> <li>Keyword Marker does nothing in this case</li> <li>Stemmer changes words to its stems, here <code>tvs</code> into <code>tv</code>, <code>television</code> into <code>televis</code></li> </ol>"},{"location":"solr-token-matching/#we-have-matching-tokens-here","title":"We have matching tokens here","text":"<p>The UI shows also that tokens <code>mark</code> and <code>tv</code> are a match between query token and indexed token - matching tokens are highlighted.</p>"},{"location":"solr-token-matching/#but-watch-out","title":"But watch out!","text":"<p>On the token level, the match must be exact - <code>car</code> would not match <code>cars</code>. You need to define the appropriate analyzers to make sure that different grammatical forms will be handled correctly.</p>"},{"location":"solr-token-matching/#notworthy-stems-might-not-be-existing-words","title":"Notworthy: stems might not be existing words","text":"<p>In this example the stem from <code>television</code> is <code>televis</code>. This is fine, stems are the most basic form which is shared between all grammatical variants of the word, but stem itself does not need to form a valid word by its own.</p>"},{"location":"solr-token-matching/#why-do-we-have-synonyms-multiplied","title":"Why do we have synonyms multiplied?","text":"<p>On a non-verbose output we can be surprised that we have four synonyms instead of a single word. </p> <p>However, if we enable verbose output and scroll down, we can see more details:</p> <p></p> <p>We can see that all synonyms:</p> <ul> <li>have the same <code>start</code> and <code>end</code></li> <li>has the same <code>position</code></li> <li>are of type <code>SYNONYM</code></li> </ul> <p>This all means that Solr knows, that these are alternative tokens placed in the same position.</p>"},{"location":"ubuntu-logitech-mx-keys/","title":"Ubuntu 22.04 and Logitech MX Keys for Mac","text":"<p>The Logitech MX Keys for Mac keyboard works generally fine in Ubuntu using a standard Bluetooth connection, however it has a bit different key layout than Ubuntu expects. </p>"},{"location":"ubuntu-logitech-mx-keys/#switching-places-of-win-and-alt-keys-aka-remapping-winalt-keys","title":"Switching places of Win and Alt keys (a.k.a. remapping Win/Alt keys)","text":"<p>To do that, install the following tool: <pre><code>sudo apt update &amp;&amp; sudo apt install input-remapper\n</code></pre></p> <p>This application allows to remap all recived keypresses. So basically start the application and create rules that remap:</p> <ul> <li><code>Alt_L</code> into <code>Super_L</code></li> <li><code>Super_L</code> into <code>Alt_L</code></li> <li><code>ISO Level3 Shift</code> into <code>Super_R</code> (note: this is the name of <code>Alt_R</code> detected on my setup. Honestly, I don't know why)</li> <li><code>Super_R</code> into <code>Alt_R</code> (yeap, here you can use <code>Alt_R</code> name)</li> </ul> <p>Note on <code>Super_L</code> key: Input Remapper is unable to capture Super_L (\"Left Win\") key, as it starts Gonme's launcher screen. To avoid that, install Gnome Tweaks from Ubuntu Software and temporarily change launcher screen keyboard shortcut.</p>"},{"location":"ubuntu-logitech-mx-keys/#function-keys-without-fn","title":"Function keys without <code>fn</code>","text":"<p>One - the simplest - way is to use FnLock. There should be a <code>FnLock</code> button on the keyboard (usually it's written on the <code>Esc</code> key) - at least on Lenovo ThinkPad there is.</p> <p>Alternatively you can use Solaar: <pre><code>sudo apt update &amp;&amp; sudo apt install solaar\n</code></pre> After installing, open the app, select your keyboard and check \"Swap Fx function\"</p>"},{"location":"ubuntu-logitech-mx-keys/#eject-button-as-printscreen","title":"<code>Eject</code> button as PrintScreen","text":"<p>Logi MX Keys for Mac has a PrintScreen button located above the keypad <code>=</code> button - on the same key as F17. However I find it more handy to remap the Eject button to create screenshots.</p> <p>To do that, install Solaar: <pre><code>sudo apt update &amp;&amp; sudo apt install solaar\n</code></pre> After installing, open the app, and click \"Rules editor\"</p> <p>Create a user-defined rule as follows: <pre><code>User-defined rules\n  Rule\n    Key:       Screen Capture/Print Screen (00BF) (pressed)\n    Keyp ress: Print\n  Rule\n    Key:       Eject (000D) (pressed)\n    Key press: Print\n</code></pre></p>"},{"location":"ubuntu-logitech-mx-vertical/","title":"Ubuntu 22.04 and Logitech MX Vertical","text":"<p>The Logitech MX Vertical generally works fine in Ubuntu 22.04 out of the box. The only thing that doesn't work is the DPI button.</p> <p>Here I will show how to make the DPI button usable - it will show the <code>Activities</code> screen (something similar to MacOS App Expose)</p>"},{"location":"ubuntu-logitech-mx-vertical/#reacting-on-the-dpi-button","title":"Reacting on the DPI button","text":"<p>The first problem to conquer is that the MX Vertical DPI button does not trigger a standard mouse event, but uses a proprietary Logitech protocol - and therefore cannot be handled by a standard Linux tools.</p> <p>Luckily, there's a software able to handle it - Solaar.</p> <p>So first of all, let's install it: <pre><code>sudo apt update &amp;&amp; sudo apt install solaar\n</code></pre> Once installed, open the app and click <code>Rules editor</code></p> <p>Create a user-defined rule as follows: <pre><code>User-defined rules\n  Rule\n    Key:      DPI Switch (00FD) (released)\n    Execute:  /bin/bash /home/&lt;user&gt;/dpi-button.sh\n</code></pre> After this, each press of the DPI button on the mouse will execute a <code>~/dpi-button.sh</code> script.</p> <p>Note: you can use any command to be executed in reaction to button click. I find using a custom script easier to maintain.</p>"},{"location":"ubuntu-logitech-mx-vertical/#showing-activities-using-command-line-in-ubuntu-2204","title":"Showing Activities using command line in Ubuntu 22.04","text":"<p>Now, let's put some useful code inside <code>~/dpi-button.sh</code>.</p> <p>In my case I find it most useful to open an <code>Activities</code> screen, which shows all open windows. In fact Ubuntu will show <code>Activities</code> by default as a reaction to pressing the Super key on the keyboard, so our job is in fact to emulate Super key press.</p> <p>The exact way of achieving it depends on the display manager you're using.</p> <p>How to check which display manager is used</p> <pre><code># Checking which display manager is used \necho $XDG_SESSION_TYPE\n</code></pre>"},{"location":"ubuntu-logitech-mx-vertical/#wayland-version-default","title":"Wayland version (default)","text":"<p>If you're using Wayland as a display manager - which is probably the case, as Wayland is a default display manager in Ubuntu 22.04 - you need to install the <code>ydotool</code> tool. Do not install if using apt,  it's outdated and buggy (as of November 2022)! Instead, use the following instruction: https://askubuntu.com/a/1413830</p> <p>Then you can emulate pressing Super (aka Win) key using the following command <pre><code>ydotool key 125:1 125:0\n</code></pre></p> <p>To sum up, the <code>~/dpi-button.sh</code> should look like this: ~/dpi-button.sh<pre><code>#!/bin/bash\nydotool key 125:1 125:0\n</code></pre></p> <p>Note: if the ydotool doesn't work after the reboot, create a following file: <code>~/.config/autostart/ydotoold.desktop</code> with the following content: ~/.config/autostart/ydotoold.desktop<pre><code>[Desktop Entry]\nType=Application\nTerminal=false\nName=ydotool deamon\nExec=/usr/local/bin/ydotoold\nComment=Generic Linux command-line automation tool (no X!).\nCategories=GNOME;GTK;System;\n</code></pre></p>"},{"location":"ubuntu-logitech-mx-vertical/#xorg-version","title":"X.org version","text":"<p>While X.org is not the default display manager in Ubuntu 22.04, however it's still available and possible to use.</p> <p>How to change Ubuntu 22.04 display manager to X.org</p> <p>Source: https://askubuntu.com/a/1354342</p> <p>Edit the file <code>/etc/gdm3/custom.conf</code> and uncomment line: <pre><code>#WaylandEnable=false  \n</code></pre> Reboot</p> <p>Note that if you're using X.org, you might encounter lower performance on 4K displays.</p> <p>If you're using X.org, use the following command to emulate pressing Super (aka Win) key on the keyboard: <pre><code>xdotool key super\n</code></pre> And by default Ubuntu shows the <code>Activities</code> screen.</p> <p>To sum up, the <code>~/dpi-button.sh</code> should look like this: ~/dpi-button.sh<pre><code>#!/bin/bash\nxdotool key super\n</code></pre></p>"},{"location":"ubuntu-setup/","title":"My favorite Ubuntu 22.04 initial setup","text":""},{"location":"ubuntu-setup/#logitech-mx-keys-for-mac-in-ubuntu","title":"Logitech MX Keys for Mac in Ubuntu","text":"<p>See this description</p>"},{"location":"ubuntu-setup/#logitech-mx-vertical","title":"Logitech MX Vertical","text":"<p>See this description</p>"},{"location":"ubuntu-setup/#background-effects-in-ms-teams-linux","title":"Background effects in MS Teams Linux","text":"<p>As of November 2022, for some reason the MS Teams desktop client in Linux doesn't support background effects. The same applies to web client in Firefox. But the web client in Chrome does support them! So simply use Chrome for Teams!</p>"},{"location":"ubuntu-setup/#openjdk-17-docker-git-installation-command-line-tools","title":"OpenJDK 17, Docker, git installation + command line tools","text":"<pre><code>sudo apt update\n\nsudo apt install -y openjdk-17-jdk\nsudo apt install -y git\nsudo apt install -y httpie wget curl screen jq\nsudo apt install -y magic-wormhole\nsudo apt install -y virtualbox\n\n# Docker\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\nsudo sh -eux &lt;&lt;EOF\n# Install newuidmap &amp; newgidmap binaries\napt-get install -y uidmap\nEOF\ndockerd-rootless-setuptool.sh install\ndocker context use rootless\necho 'echo \"\" &gt;&gt; ~/.bashrc' &gt;&gt; ~/.bashrc\necho 'export DOCKER_HOST=unix:///run/user/1000/docker.sock' &gt;&gt; ~/.bashrc\n</code></pre> <p>Remember to set up git: <pre><code>git config --global user.name \"&lt;name&gt;\"\ngit config --global user.email \"&lt;email&gt;\"\n</code></pre></p>"},{"location":"ubuntu-setup/#python-using-pyenv","title":"Python (using pyenv)","text":"<pre><code>sudo apt install -y make \\\n  build-essential \\\n  gcc \\\n  libssl-dev \\\n  zlib1g-dev \\\n  libbz2-dev \\\n  libreadline-dev \\\n  libsqlite3-dev \\\n  llvm \\\n  libncurses5-dev \\\n  libncursesw5-dev \\\n  xz-utils \\\n  tk-dev\n\ncurl https://pyenv.run | bash\n</code></pre> <p>Add to <code>.bashrc</code>: <pre><code>export PYENV_ROOT=\"$HOME/.pyenv\"\ncommand -v pyenv &gt;/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"\neval \"$(pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"\n</code></pre></p> <p>Then: <pre><code>pyenv install --list\n# choose the newest, f.ex. 3.10.7\npyenv install 3.10.7\npyenv global 3.10.7\n</code></pre></p>"},{"location":"ubuntu-setup/#gui-tools","title":"GUI Tools","text":"<ul> <li>Google Chrome</li> <li>Slack - Slack (note: use DEB version; do not use Snap version, it's buggy!)</li> <li>KeePassXC - password manager</li> <li>Shutter - screenshooting tool. Very limitted functionality with the Wayland displat manager, but has a cool Drawing tool.</li> <li>IntelliJ IDEA - IDE</li> </ul>"},{"location":"ubuntu-setup/#gnome-extentions","title":"Gnome Extentions","text":"<ul> <li>Dash-to-panel - makes Gnome look more like Windows (one horizontal bar at the bottom)</li> <li>gTile - neat window placement manager, alternative to WinDivvy/Divvy for MacOS</li> </ul>"},{"location":"ubuntu-setup/#onedrive-sync","title":"OneDrive sync","text":"<ol> <li>First, install this command line tool: https://github.com/abraunegg/onedrive</li> <li>Then, download this GUI tool: https://github.com/bpozdena/OneDriveGUI</li> </ol> <p>Info</p> <p>Note: The OneDriveGUI tool is not an installer - it's an executable that just runs :-) So probably you'd like to move it to some <code>~/bin</code> folder before running.</p>"}]}